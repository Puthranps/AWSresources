[ :ref:`aws <cli:aws>` . :ref:`iot <cli:aws iot>` ]

.. _cli:aws iot describe-job-execution:


**********************
describe-job-execution
**********************



===========
Description
===========



Describes a job execution.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot-2015-05-28/DescribeJobExecution>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-job-execution
  --job-id <value>
  --thing-name <value>
  [--execution-number <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--job-id`` (string)


  The unique identifier you assigned to this job when it was created.

  

``--thing-name`` (string)


  The name of the thing on which the job execution is running.

  

``--execution-number`` (long)


  A string (consisting of the digits "0" through "9" which is used to specify a particular job execution on a particular device.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

execution -> (structure)

  

  Information about the job execution.

  

  jobId -> (string)

    

    The unique identifier you assigned to the job when it was created.

    

    

  status -> (string)

    

    The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).

    

    

  forceCanceled -> (boolean)

    

    Will be ``true`` if the job execution was canceled with the optional ``force`` parameter set to ``true`` .

    

    

  statusDetails -> (structure)

    

    A collection of name/value pairs that describe the status of the job execution.

    

    detailsMap -> (map)

      

      The job execution status.

      

      key -> (string)

        

        

      value -> (string)

        

        

      

    

  thingArn -> (string)

    

    The ARN of the thing on which the job execution is running.

    

    

  queuedAt -> (timestamp)

    

    The time, in milliseconds since the epoch, when the job execution was queued.

    

    

  startedAt -> (timestamp)

    

    The time, in milliseconds since the epoch, when the job execution started.

    

    

  lastUpdatedAt -> (timestamp)

    

    The time, in milliseconds since the epoch, when the job execution was last updated.

    

    

  executionNumber -> (long)

    

    A string (consisting of the digits "0" through "9") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information. 

    

    

  versionNumber -> (long)

    

    The version of the job execution. Job execution versions are incremented each time they are updated by a device.

    

    

  approximateSecondsBeforeTimedOut -> (long)

    

    The estimated number of seconds that remain before the job execution status will be changed to ``TIMED_OUT`` .

    

    

  

