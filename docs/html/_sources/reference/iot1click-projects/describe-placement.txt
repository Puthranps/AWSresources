[ :ref:`aws <cli:aws>` . :ref:`iot1click-projects <cli:aws iot1click-projects>` ]

.. _cli:aws iot1click-projects describe-placement:


******************
describe-placement
******************



===========
Description
===========



Describes a placement in a project.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iot1click-projects-2018-05-14/DescribePlacement>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-placement
  --placement-name <value>
  --project-name <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--placement-name`` (string)


  The name of the placement within a project.

  

``--project-name`` (string)


  The project containing the placement to be described.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

placement -> (structure)

  

  An object describing the placement.

  

  projectName -> (string)

    

    The name of the project containing the placement.

    

    

  placementName -> (string)

    

    The name of the placement.

    

    

  attributes -> (map)

    

    The user-defined attributes associated with the placement.

    

    key -> (string)

      

      

    value -> (string)

      

      

    

  createdDate -> (timestamp)

    

    The date when the placement was initially created, in UNIX epoch time format.

    

    

  updatedDate -> (timestamp)

    

    The date when the placement was last updated, in UNIX epoch time format. If the placement was not updated, then ``createdDate`` and ``updatedDate`` are the same.

    

    

  

