[ :ref:`aws <cli:aws>` . :ref:`cognito-idp <cli:aws cognito-idp>` ]

.. _cli:aws cognito-idp admin-respond-to-auth-challenge:


*******************************
admin-respond-to-auth-challenge
*******************************



===========
Description
===========



Responds to an authentication challenge, as an administrator.

 

Requires developer credentials.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/cognito-idp-2016-04-18/AdminRespondToAuthChallenge>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    admin-respond-to-auth-challenge
  --user-pool-id <value>
  --client-id <value>
  --challenge-name <value>
  [--challenge-responses <value>]
  [--session <value>]
  [--analytics-metadata <value>]
  [--context-data <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--user-pool-id`` (string)


  The ID of the Amazon Cognito user pool.

  

``--client-id`` (string)


  The app client ID.

  

``--challenge-name`` (string)


  The challenge name. For more information, see .

  

  Possible values:

  
  *   ``SMS_MFA``

  
  *   ``SOFTWARE_TOKEN_MFA``

  
  *   ``SELECT_MFA_TYPE``

  
  *   ``MFA_SETUP``

  
  *   ``PASSWORD_VERIFIER``

  
  *   ``CUSTOM_CHALLENGE``

  
  *   ``DEVICE_SRP_AUTH``

  
  *   ``DEVICE_PASSWORD_VERIFIER``

  
  *   ``ADMIN_NO_SRP_AUTH``

  
  *   ``NEW_PASSWORD_REQUIRED``

  

  

``--challenge-responses`` (map)


  The challenge responses. These are inputs corresponding to the value of ``ChallengeName`` , for example:

   

   
  * ``SMS_MFA`` : ``SMS_MFA_CODE`` , ``USERNAME`` , ``SECRET_HASH`` (if app client is configured with client secret). 
   
  * ``PASSWORD_VERIFIER`` : ``PASSWORD_CLAIM_SIGNATURE`` , ``PASSWORD_CLAIM_SECRET_BLOCK`` , ``TIMESTAMP`` , ``USERNAME`` , ``SECRET_HASH`` (if app client is configured with client secret). 
   
  * ``ADMIN_NO_SRP_AUTH`` : ``PASSWORD`` , ``USERNAME`` , ``SECRET_HASH`` (if app client is configured with client secret).  
   
  * ``NEW_PASSWORD_REQUIRED`` : ``NEW_PASSWORD`` , any other required attributes, ``USERNAME`` , ``SECRET_HASH`` (if app client is configured with client secret).  
   

   

  The value of the ``USERNAME`` attribute must be the user's actual username, not an alias (such as email address or phone number). To make this easier, the ``AdminInitiateAuth`` response includes the actual username value in the ``USERNAMEUSER_ID_FOR_SRP`` attribute, even if you specified an alias in your call to ``AdminInitiateAuth`` .

  



Shorthand Syntax::

    KeyName1=string,KeyName2=string




JSON Syntax::

  {"string": "string"
    ...}



``--session`` (string)


  The session which should be passed both ways in challenge-response calls to the service. If ``InitiateAuth`` or ``RespondToAuthChallenge`` API call determines that the caller needs to go through another challenge, they return a session with other challenge parameters. This session should be passed as it is to the next ``RespondToAuthChallenge`` API call.

  

``--analytics-metadata`` (structure)


  The analytics metadata for collecting Amazon Pinpoint metrics for ``AdminRespondToAuthChallenge`` calls.

  



Shorthand Syntax::

    AnalyticsEndpointId=string




JSON Syntax::

  {
    "AnalyticsEndpointId": "string"
  }



``--context-data`` (structure)


  Contextual data such as the user's device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.

  



Shorthand Syntax::

    IpAddress=string,ServerName=string,ServerPath=string,HttpHeaders=[{headerName=string,headerValue=string},{headerName=string,headerValue=string}],EncodedData=string




JSON Syntax::

  {
    "IpAddress": "string",
    "ServerName": "string",
    "ServerPath": "string",
    "HttpHeaders": [
      {
        "headerName": "string",
        "headerValue": "string"
      }
      ...
    ],
    "EncodedData": "string"
  }



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ChallengeName -> (string)

  

  The name of the challenge. For more information, see .

  

  

Session -> (string)

  

  The session which should be passed both ways in challenge-response calls to the service. If the or API call determines that the caller needs to go through another challenge, they return a session with other challenge parameters. This session should be passed as it is to the next ``RespondToAuthChallenge`` API call.

  

  

ChallengeParameters -> (map)

  

  The challenge parameters. For more information, see .

  

  key -> (string)

    

    

  value -> (string)

    

    

  

AuthenticationResult -> (structure)

  

  The result returned by the server in response to the authentication request.

  

  AccessToken -> (string)

    

    The access token.

    

    

  ExpiresIn -> (integer)

    

    The expiration period of the authentication result in seconds.

    

    

  TokenType -> (string)

    

    The token type.

    

    

  RefreshToken -> (string)

    

    The refresh token.

    

    

  IdToken -> (string)

    

    The ID token.

    

    

  NewDeviceMetadata -> (structure)

    

    The new device metadata from an authentication result.

    

    DeviceKey -> (string)

      

      The device key.

      

      

    DeviceGroupKey -> (string)

      

      The device group key.

      

      

    

  

