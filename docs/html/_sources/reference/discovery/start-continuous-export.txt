[ :ref:`aws <cli:aws>` . :ref:`discovery <cli:aws discovery>` ]

.. _cli:aws discovery start-continuous-export:


***********************
start-continuous-export
***********************



===========
Description
===========



Start the continuous flow of agent's discovered data into Amazon Athena.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/discovery-2015-11-01/StartContinuousExport>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    start-continuous-export
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

exportId -> (string)

  

  The unique ID assigned to this export.

  

  

s3Bucket -> (string)

  

  The name of the s3 bucket where the export data parquet files are stored.

  

  

startTime -> (timestamp)

  

  The timestamp representing when the continuous export was started.

  

  

dataSource -> (string)

  

  The type of data collector used to gather this data (currently only offered for AGENT).

  

  

schemaStorageConfig -> (map)

  

  A dictionary which describes how the data is stored.

   

   
  * ``databaseName`` - the name of the Glue database used to store the schema. 
   

  

  key -> (string)

    

    

  value -> (string)

    

    

  

