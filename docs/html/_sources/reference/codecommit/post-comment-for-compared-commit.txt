[ :ref:`aws <cli:aws>` . :ref:`codecommit <cli:aws codecommit>` ]

.. _cli:aws codecommit post-comment-for-compared-commit:


********************************
post-comment-for-compared-commit
********************************



===========
Description
===========



Posts a comment on the comparison between two commits.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/codecommit-2015-04-13/PostCommentForComparedCommit>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    post-comment-for-compared-commit
  --repository-name <value>
  [--before-commit-id <value>]
  --after-commit-id <value>
  [--location <value>]
  --content <value>
  [--client-request-token <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--repository-name`` (string)


  The name of the repository where you want to post a comment on the comparison between commits.

  

``--before-commit-id`` (string)


  To establish the directionality of the comparison, the full commit ID of the 'before' commit.

  

``--after-commit-id`` (string)


  To establish the directionality of the comparison, the full commit ID of the 'after' commit.

  

``--location`` (structure)


  The location of the comparison where you want to comment.

  



Shorthand Syntax::

    filePath=string,filePosition=long,relativeFileVersion=string




JSON Syntax::

  {
    "filePath": "string",
    "filePosition": long,
    "relativeFileVersion": "BEFORE"|"AFTER"
  }



``--content`` (string)


  The content of the comment you want to make.

  

``--client-request-token`` (string)


  A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To create a comment on a commit**

This example demonstrates how to add the comment '"Can you add a test case for this?"' on the change to the 'cl_sample.js' file in the comparison between two commits in a repository named 'MyDemoRepo'::

  aws codecommit post-comment-for-compared-commit --repository-name MyDemoRepo --before-commit-id 317f8570EXAMPLE --after-commit-id 5d036259EXAMPLE --client-request-token 123Example --content "Can you add a test case for this?" --location filePath=cl_sample.js,filePosition=1232,relativeFileVersion=AFTER

Output::

  {
         "afterBlobId": "1f330709EXAMPLE",
         "afterCommitId": "317f8570EXAMPLE",
         "beforeBlobId": "80906a4cEXAMPLE",
         "beforeCommitId": "6e147360EXAMPLE",
         "comment": {
               "authorArn": "arn:aws:iam::111111111111:user/Li_Juan",
               "clientRequestToken": "",
               "commentId": "553b509bEXAMPLE56198325",
               "content": "Can you add a test case for this?",
               "creationDate": 1508369612.203,
               "deleted": false,
               "commentId": "abc123-EXAMPLE",
               "lastModifiedDate": 1508369612.203
             },
             "location": { 
               "filePath": "cl_sample.js",
               "filePosition": 1232,
               "relativeFileVersion": "AFTER"
             },
         "repositoryName": "MyDemoRepo"
  }

======
Output
======

repositoryName -> (string)

  

  The name of the repository where you posted a comment on the comparison between commits.

  

  

beforeCommitId -> (string)

  

  In the directionality you established, the full commit ID of the 'before' commit.

  

  

afterCommitId -> (string)

  

  In the directionality you established, the full commit ID of the 'after' commit.

  

  

beforeBlobId -> (string)

  

  In the directionality you established, the blob ID of the 'before' blob.

  

  

afterBlobId -> (string)

  

  In the directionality you established, the blob ID of the 'after' blob.

  

  

location -> (structure)

  

  The location of the comment in the comparison between the two commits.

  

  filePath -> (string)

    

    The name of the file being compared, including its extension and subdirectory, if any.

    

    

  filePosition -> (long)

    

    The position of a change within a compared file, in line number format.

    

    

  relativeFileVersion -> (string)

    

    In a comparison of commits or a pull request, whether the change is in the 'before' or 'after' of that comparison.

    

    

  

comment -> (structure)

  

  The content of the comment you posted.

  

  commentId -> (string)

    

    The system-generated comment ID.

    

    

  content -> (string)

    

    The content of the comment.

    

    

  inReplyTo -> (string)

    

    The ID of the comment for which this comment is a reply, if any.

    

    

  creationDate -> (timestamp)

    

    The date and time the comment was created, in timestamp format.

    

    

  lastModifiedDate -> (timestamp)

    

    The date and time the comment was most recently modified, in timestamp format.

    

    

  authorArn -> (string)

    

    The Amazon Resource Name (ARN) of the person who posted the comment.

    

    

  deleted -> (boolean)

    

    A Boolean value indicating whether the comment has been deleted.

    

    

  clientRequestToken -> (string)

    

    A unique, client-generated idempotency token that when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request is received with the same parameters and a token is included, the request will return information about the initial request that used that token.

    

    

  

