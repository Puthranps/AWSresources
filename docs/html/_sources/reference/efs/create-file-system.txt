[ :ref:`aws <cli:aws>` . :ref:`efs <cli:aws efs>` ]

.. _cli:aws efs create-file-system:


******************
create-file-system
******************



===========
Description
===========



Creates a new, empty file system. The operation requires a creation token in the request that Amazon EFS uses to ensure idempotent creation (calling the operation with same creation token has no effect). If a file system does not currently exist that is owned by the caller's AWS account with the specified creation token, this operation does the following:

 

 
* Creates a new, empty file system. The file system will have an Amazon EFS assigned ID, and an initial lifecycle state ``creating`` . 
 
* Returns with the description of the created file system. 
 

 

Otherwise, this operation returns a ``FileSystemAlreadyExists`` error with the ID of the existing file system.

 

.. note::

   

  For basic use cases, you can use a randomly generated UUID for the creation token.

   

 

The idempotent operation allows you to retry a ``CreateFileSystem`` call without risk of creating an extra file system. This can happen when an initial call fails in a way that leaves it uncertain whether or not a file system was actually created. An example might be that a transport level timeout occurred or your connection was reset. As long as you use the same creation token, if the initial call had succeeded in creating a file system, the client can learn of its existence from the ``FileSystemAlreadyExists`` error.

 

.. note::

   

  The ``CreateFileSystem`` call returns while the file system's lifecycle state is still ``creating`` . You can check the file system creation status by calling the  DescribeFileSystems operation, which among other things returns the file system state.

   

 

This operation also takes an optional ``PerformanceMode`` parameter that you choose for your file system. We recommend ``generalPurpose`` performance mode for most file systems. File systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. The performance mode can't be changed after the file system has been created. For more information, see `Amazon EFS\: Performance Modes <http://docs.aws.amazon.com/efs/latest/ug/performance.html#performancemodes.html>`__ .

 

After the file system is fully created, Amazon EFS sets its lifecycle state to ``available`` , at which point you can create one or more mount targets for the file system in your VPC. For more information, see  CreateMountTarget . You mount your Amazon EFS file system on an EC2 instances in your VPC via the mount target. For more information, see `Amazon EFS\: How it Works <http://docs.aws.amazon.com/efs/latest/ug/how-it-works.html>`__ . 

 

This operation requires permissions for the ``elasticfilesystem:CreateFileSystem`` action. 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-file-system
  --creation-token <value>
  [--performance-mode <value>]
  [--encrypted | --no-encrypted]
  [--kms-key-id <value>]
  [--throughput-mode <value>]
  [--provisioned-throughput-in-mibps <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--creation-token`` (string)


  String of up to 64 ASCII characters. Amazon EFS uses this to ensure idempotent creation.

  

``--performance-mode`` (string)


  The ``PerformanceMode`` of the file system. We recommend ``generalPurpose`` performance mode for most file systems. File systems using the ``maxIO`` performance mode can scale to higher levels of aggregate throughput and operations per second with a tradeoff of slightly higher latencies for most file operations. This can't be changed after the file system has been created.

  

  Possible values:

  
  *   ``generalPurpose``

  
  *   ``maxIO``

  

  

``--encrypted`` | ``--no-encrypted`` (boolean)


  A Boolean value that, if true, creates an encrypted file system. When creating an encrypted file system, you have the option of specifying a  CreateFileSystemRequest$KmsKeyId for an existing AWS Key Management Service (AWS KMS) customer master key (CMK). If you don't specify a CMK, then the default CMK for Amazon EFS, ``/aws/elasticfilesystem`` , is used to protect the encrypted file system. 

  

``--kms-key-id`` (string)


  The ID of the AWS KMS CMK to be used to protect the encrypted file system. This parameter is only required if you want to use a non-default CMK. If this parameter is not specified, the default CMK for Amazon EFS is used. This ID can be in one of the following formats:

   

   
  * Key ID - A unique identifier of the key, for example, ``1234abcd-12ab-34cd-56ef-1234567890ab`` . 
   
  * ARN - An Amazon Resource Name (ARN) for the key, for example, ``arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`` . 
   
  * Key alias - A previously created display name for a key. For example, ``alias/projectKey1`` . 
   
  * Key alias ARN - An ARN for a key alias, for example, ``arn:aws:kms:us-west-2:444455556666:alias/projectKey1`` . 
   

   

  If KmsKeyId is specified, the  CreateFileSystemRequest$Encrypted parameter must be set to true.

  

``--throughput-mode`` (string)


  The throughput mode for the file system to be created. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.

  

  Possible values:

  
  *   ``bursting``

  
  *   ``provisioned``

  

  

``--provisioned-throughput-in-mibps`` (double)


  The throughput, measured in MiB/s, that you want to provision for a file system that you're creating. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see `Amazon EFS Limits That You Can Increase <http://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits>`__ in the *Amazon EFS User Guide.*  

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

OwnerId -> (string)

  

  AWS account that created the file system. If the file system was created by an IAM user, the parent account to which the user belongs is the owner.

  

  

CreationToken -> (string)

  

  Opaque string specified in the request.

  

  

FileSystemId -> (string)

  

  ID of the file system, assigned by Amazon EFS.

  

  

CreationTime -> (timestamp)

  

  Time that the file system was created, in seconds (since 1970-01-01T00:00:00Z).

  

  

LifeCycleState -> (string)

  

  Lifecycle phase of the file system.

  

  

Name -> (string)

  

  You can add tags to a file system, including a ``Name`` tag. For more information, see  CreateTags . If the file system has a ``Name`` tag, Amazon EFS returns the value in this field. 

  

  

NumberOfMountTargets -> (integer)

  

  Current number of mount targets that the file system has. For more information, see  CreateMountTarget .

  

  

SizeInBytes -> (structure)

  

  Latest known metered size (in bytes) of data stored in the file system, in its ``Value`` field, and the time at which that size was determined in its ``Timestamp`` field. The ``Timestamp`` value is the integer number of seconds since 1970-01-01T00:00:00Z. The ``SizeInBytes`` value doesn't represent the size of a consistent snapshot of the file system, but it is eventually consistent when there are no writes to the file system. That is, ``SizeInBytes`` represents actual size only if the file system is not modified for a period longer than a couple of hours. Otherwise, the value is not the exact size that the file system was at any point in time. 

  

  Value -> (long)

    

    Latest known metered size (in bytes) of data stored in the file system.

    

    

  Timestamp -> (timestamp)

    

    Time at which the size of data, returned in the ``Value`` field, was determined. The value is the integer number of seconds since 1970-01-01T00:00:00Z.

    

    

  

PerformanceMode -> (string)

  

  The ``PerformanceMode`` of the file system.

  

  

Encrypted -> (boolean)

  

  A Boolean value that, if true, indicates that the file system is encrypted.

  

  

KmsKeyId -> (string)

  

  The ID of an AWS Key Management Service (AWS KMS) customer master key (CMK) that was used to protect the encrypted file system.

  

  

ThroughputMode -> (string)

  

  The throughput mode for a file system. There are two throughput modes to choose from for your file system: bursting and provisioned. You can decrease your file system's throughput in Provisioned Throughput mode or change between the throughput modes as long as it’s been more than 24 hours since the last decrease or throughput mode change.

  

  

ProvisionedThroughputInMibps -> (double)

  

  The throughput, measured in MiB/s, that you want to provision for a file system. The limit on throughput is 1024 MiB/s. You can get these limits increased by contacting AWS Support. For more information, see `Amazon EFS Limits That You Can Increase <http://docs.aws.amazon.com/efs/latest/ug/limits.html#soft-limits>`__ in the *Amazon EFS User Guide.*  

  

  

