[ :ref:`aws <cli:aws>` . :ref:`serverlessrepo <cli:aws serverlessrepo>` ]

.. _cli:aws serverlessrepo get-application:


***************
get-application
***************



===========
Description
===========



Gets the specified application.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/serverlessrepo-2017-09-08/GetApplication>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-application
  --application-id <value>
  [--semantic-version <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--application-id`` (string)


  The Amazon Resource Name (ARN) of the application.

  

``--semantic-version`` (string)


  The semantic version of the application to get.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ApplicationId -> (string)

  

  The application Amazon Resource Name (ARN).

  

  

Author -> (string)

  

  The name of the author publishing the app.

  

  Minimum length=1. Maximum length=127.

  

  Pattern "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";

  

  

CreationTime -> (string)

  

  The date and time this resource was created.

  

  

Description -> (string)

  

  The description of the application.

  

  Minimum length=1. Maximum length=256

  

  

HomePageUrl -> (string)

  

  A URL with more information about the application, for example the location of your GitHub repository for the application.

  

  

Labels -> (list)

  

  Labels to improve discovery of apps in search results.

  

  Minimum length=1. Maximum length=127. Maximum number of labels: 10

  

  Pattern: "^[a-zA-Z0-9+\\-_:\\/@]+$";

  

  (string)

    

    

  

LicenseUrl -> (string)

  

  A link to a license file of the app that matches the spdxLicenseID value of your application.

  

  Maximum size 5 MB

  

  

Name -> (string)

  

  The name of the application.

  

  Minimum length=1. Maximum length=140

  

  Pattern: "[a-zA-Z0-9\\-]+";

  

  

ReadmeUrl -> (string)

  

  A link to the readme file in Markdown language that contains a more detailed description of the application and how it works.

  

  Maximum size 5 MB

  

  

SpdxLicenseId -> (string)

  

  A valid identifier from https://spdx.org/licenses/.

  

  

Version -> (structure)

  

  Version information about the application.

  

  ApplicationId -> (string)

    

    The application Amazon Resource Name (ARN).

    

    

  CreationTime -> (string)

    

    The date and time this resource was created.

    

    

  ParameterDefinitions -> (list)

    

    An array of parameter types supported by the application.

    

    (structure)

      

      Parameters supported by the application.

      

      AllowedPattern -> (string)

        

        A regular expression that represents the patterns to allow for String types.

        

        

      AllowedValues -> (list)

        

        An array containing the list of values allowed for the parameter.

        

        (string)

          

          

        

      ConstraintDescription -> (string)

        

        A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:

        

        Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+ 

        

        By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:

        

        Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers. 

        

        

      DefaultValue -> (string)

        

        A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.

        

        

      Description -> (string)

        

        A string of up to 4,000 characters that describes the parameter.

        

        

      MaxLength -> (integer)

        

        An integer value that determines the largest number of characters that you want to allow for String types.

        

        

      MaxValue -> (integer)

        

        A numeric value that determines the largest numeric value that you want to allow for Number types.

        

        

      MinLength -> (integer)

        

        An integer value that determines the smallest number of characters that you want to allow for String types.

        

        

      MinValue -> (integer)

        

        A numeric value that determines the smallest numeric value that you want to allow for Number types.

        

        

      Name -> (string)

        

        The name of the parameter.

        

        

      NoEcho -> (boolean)

        

        Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).

        

        

      ReferencedByResources -> (list)

        

        A list of AWS SAM resources that use this parameter.

        

        (string)

          

          

        

      Type -> (string)

        

        The type of the parameter.

        

        Valid values: String | Number | List<Number> | CommaDelimitedList 

        

        String: A literal string.

        

        For example, users can specify "MyUserName".

        

        Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.

        

        For example, users might specify "8888".

        

        List<Number>: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.

        

        For example, users might specify "80,20", and then Ref results in ["80","20"].

        

        CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.

        

        For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].

        

        

      

    

  SemanticVersion -> (string)

    

    The semantic version of the application:

    

     `https\://semver.org/ <https://semver.org/>`__  

    

    

  SourceCodeUrl -> (string)

    

    A link to a public repository for the source code of your application.

    

    

  TemplateUrl -> (string)

    

    A link to the packaged AWS SAM template of your application.

    

    

  

