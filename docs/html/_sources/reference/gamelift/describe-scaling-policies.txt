[ :ref:`aws <cli:aws>` . :ref:`gamelift <cli:aws gamelift>` ]

.. _cli:aws gamelift describe-scaling-policies:


*************************
describe-scaling-policies
*************************



===========
Description
===========



Retrieves all scaling policies applied to a fleet.

 

To get a fleet's scaling policies, specify the fleet ID. You can filter this request by policy status, such as to retrieve only active scaling policies. Use the pagination parameters to retrieve results as a set of sequential pages. If successful, set of  ScalingPolicy objects is returned for the fleet.

 

A fleet may have all of its scaling policies suspended ( StopFleetActions ). This action does not affect the status of the scaling policies, which remains ACTIVE. To see whether a fleet's scaling policies are in force or suspended, call  DescribeFleetAttributes and check the stopped actions.

 

Operations related to fleet capacity scaling include:

 

 
*  DescribeFleetCapacity   
 
*  UpdateFleetCapacity   
 
*  DescribeEC2InstanceLimits   
 
* Manage scaling policies: 

   
  *  PutScalingPolicy (auto-scaling) 
   
  *  DescribeScalingPolicies (auto-scaling) 
   
  *  DeleteScalingPolicy (auto-scaling) 
   

 
 
* Manage fleet actions: 

   
  *  StartFleetActions   
   
  *  StopFleetActions   
   

 
 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/DescribeScalingPolicies>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-scaling-policies
  --fleet-id <value>
  [--status-filter <value>]
  [--limit <value>]
  [--next-token <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--fleet-id`` (string)


  Unique identifier for a fleet to retrieve scaling policies for.

  

``--status-filter`` (string)


  Scaling policy status to filter results on. A scaling policy is only in force when in an ``ACTIVE`` status.

   

   
  * **ACTIVE** -- The scaling policy is currently in force. 
   
  * **UPDATEREQUESTED** -- A request to update the scaling policy has been received. 
   
  * **UPDATING** -- A change is being made to the scaling policy. 
   
  * **DELETEREQUESTED** -- A request to delete the scaling policy has been received. 
   
  * **DELETING** -- The scaling policy is being deleted. 
   
  * **DELETED** -- The scaling policy has been deleted. 
   
  * **ERROR** -- An error occurred in creating the policy. It should be removed and recreated. 
   

  

  Possible values:

  
  *   ``ACTIVE``

  
  *   ``UPDATE_REQUESTED``

  
  *   ``UPDATING``

  
  *   ``DELETE_REQUESTED``

  
  *   ``DELETING``

  
  *   ``DELETED``

  
  *   ``ERROR``

  

  

``--limit`` (integer)


  Maximum number of results to return. Use this parameter with ``NextToken`` to get results as a set of sequential pages.

  

``--next-token`` (string)


  Token that indicates the start of the next sequential page of results. Use the token that is returned with a previous call to this action. To start at the beginning of the result set, do not specify a value.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ScalingPolicies -> (list)

  

  Collection of objects containing the scaling policies matching the request.

  

  (structure)

    

    Rule that controls how a fleet is scaled. Scaling policies are uniquely identified by the combination of name and fleet ID.

     

    Operations related to fleet capacity scaling include:

     

     
    *  DescribeFleetCapacity   
     
    *  UpdateFleetCapacity   
     
    *  DescribeEC2InstanceLimits   
     
    * Manage scaling policies: 

       
      *  PutScalingPolicy (auto-scaling) 
       
      *  DescribeScalingPolicies (auto-scaling) 
       
      *  DeleteScalingPolicy (auto-scaling) 
       

     
     
    * Manage fleet actions: 

       
      *  StartFleetActions   
       
      *  StopFleetActions   
       

     
     

    

    FleetId -> (string)

      

      Unique identifier for a fleet that is associated with this scaling policy.

      

      

    Name -> (string)

      

      Descriptive label that is associated with a scaling policy. Policy names do not need to be unique.

      

      

    Status -> (string)

      

      Current status of the scaling policy. The scaling policy can be in force only when in an ``ACTIVE`` status. Scaling policies can be suspended for individual fleets (see  StopFleetActions ; if suspended for a fleet, the policy status does not change. View a fleet's stopped actions by calling  DescribeFleetCapacity .

       

       
      * **ACTIVE** -- The scaling policy can be used for auto-scaling a fleet. 
       
      * **UPDATE_REQUESTED** -- A request to update the scaling policy has been received. 
       
      * **UPDATING** -- A change is being made to the scaling policy. 
       
      * **DELETE_REQUESTED** -- A request to delete the scaling policy has been received. 
       
      * **DELETING** -- The scaling policy is being deleted. 
       
      * **DELETED** -- The scaling policy has been deleted. 
       
      * **ERROR** -- An error occurred in creating the policy. It should be removed and recreated. 
       

      

      

    ScalingAdjustment -> (integer)

      

      Amount of adjustment to make, based on the scaling adjustment type.

      

      

    ScalingAdjustmentType -> (string)

      

      Type of adjustment to make to a fleet's instance count (see  FleetCapacity ):

       

       
      * **ChangeInCapacity** -- add (or subtract) the scaling adjustment value from the current instance count. Positive values scale up while negative values scale down. 
       
      * **ExactCapacity** -- set the instance count to the scaling adjustment value. 
       
      * **PercentChangeInCapacity** -- increase or reduce the current instance count by the scaling adjustment, read as a percentage. Positive values scale up while negative values scale down. 
       

      

      

    ComparisonOperator -> (string)

      

      Comparison operator to use when measuring a metric against the threshold value.

      

      

    Threshold -> (double)

      

      Metric value used to trigger a scaling event.

      

      

    EvaluationPeriods -> (integer)

      

      Length of time (in minutes) the metric must be at or beyond the threshold before a scaling event is triggered.

      

      

    MetricName -> (string)

      

      Name of the Amazon GameLift-defined metric that is used to trigger a scaling adjustment. For detailed descriptions of fleet metrics, see `Monitor Amazon GameLift with Amazon CloudWatch <http://docs.aws.amazon.com/gamelift/latest/developerguide/monitoring-cloudwatch.html>`__ . 

       

       
      * **ActivatingGameSessions** -- Game sessions in the process of being created. 
       
      * **ActiveGameSessions** -- Game sessions that are currently running. 
       
      * **ActiveInstances** -- Fleet instances that are currently running at least one game session. 
       
      * **AvailableGameSessions** -- Additional game sessions that fleet could host simultaneously, given current capacity. 
       
      * **AvailablePlayerSessions** -- Empty player slots in currently active game sessions. This includes game sessions that are not currently accepting players. Reserved player slots are not included. 
       
      * **CurrentPlayerSessions** -- Player slots in active game sessions that are being used by a player or are reserved for a player.  
       
      * **IdleInstances** -- Active instances that are currently hosting zero game sessions.  
       
      * **PercentAvailableGameSessions** -- Unused percentage of the total number of game sessions that a fleet could host simultaneously, given current capacity. Use this metric for a target-based scaling policy. 
       
      * **PercentIdleInstances** -- Percentage of the total number of active instances that are hosting zero game sessions. 
       
      * **QueueDepth** -- Pending game session placement requests, in any queue, where the current fleet is the top-priority destination. 
       
      * **WaitTime** -- Current wait time for pending game session placement requests, in any queue, where the current fleet is the top-priority destination.  
       

      

      

    PolicyType -> (string)

      

      Type of scaling policy to create. For a target-based policy, set the parameter *MetricName* to 'PercentAvailableGameSessions' and specify a *TargetConfiguration* . For a rule-based policy set the following parameters: *MetricName* , *ComparisonOperator* , *Threshold* , *EvaluationPeriods* , *ScalingAdjustmentType* , and *ScalingAdjustment* .

      

      

    TargetConfiguration -> (structure)

      

      Object that contains settings for a target-based scaling policy.

      

      TargetValue -> (double)

        

        Desired value to use with a target-based scaling policy. The value must be relevant for whatever metric the scaling policy is using. For example, in a policy using the metric PercentAvailableGameSessions, the target value should be the preferred size of the fleet's buffer (the percent of capacity that should be idle and ready for new game sessions).

        

        

      

    

  

NextToken -> (string)

  

  Token that indicates where to resume retrieving results on the next call to this action. If no token is returned, these results represent the end of the list.

  

  

