[ :ref:`aws <cli:aws>` . :ref:`gamelift <cli:aws gamelift>` ]

.. _cli:aws gamelift create-matchmaking-rule-set:


***************************
create-matchmaking-rule-set
***************************



===========
Description
===========



Creates a new rule set for FlexMatch matchmaking. A rule set describes the type of match to create, such as the number and size of teams, and sets the parameters for acceptable player matches, such as minimum skill level or character type. Rule sets are used in matchmaking configurations, which define how matchmaking requests are handled. Each  MatchmakingConfiguration uses one rule set; you can set up multiple rule sets to handle the scenarios that suit your game (such as for different game modes), and create a separate matchmaking configuration for each rule set. See additional information on rule set content in the  MatchmakingRuleSet structure. For help creating rule sets, including useful examples, see the topic `Adding FlexMatch to Your Game <http://docs.aws.amazon.com/gamelift/latest/developerguide/match-intro.html>`__ .

 

Once created, matchmaking rule sets cannot be changed or deleted, so we recommend checking the rule set syntax using  ValidateMatchmakingRuleSet before creating the rule set.

 

To create a matchmaking rule set, provide the set of rules and a unique name. Rule sets must be defined in the same region as the matchmaking configuration they will be used with. Rule sets cannot be edited or deleted. If you need to change a rule set, create a new one with the necessary edits and then update matchmaking configurations to use the new rule set.

 

Operations related to match configurations and rule sets include:

 

 
*  CreateMatchmakingConfiguration   
 
*  DescribeMatchmakingConfigurations   
 
*  UpdateMatchmakingConfiguration   
 
*  DeleteMatchmakingConfiguration   
 
*  CreateMatchmakingRuleSet   
 
*  DescribeMatchmakingRuleSets   
 
*  ValidateMatchmakingRuleSet   
 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/gamelift-2015-10-01/CreateMatchmakingRuleSet>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-matchmaking-rule-set
  --name <value>
  --rule-set-body <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--name`` (string)


  Unique identifier for a matchmaking rule set. This name is used to identify the rule set associated with a matchmaking configuration.

  

``--rule-set-body`` (string)


  Collection of matchmaking rules, formatted as a JSON string. (Note that comments are not allowed in JSON, but most elements support a description field.)

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

RuleSet -> (structure)

  

  Object that describes the newly created matchmaking rule set.

  

  RuleSetName -> (string)

    

    Unique identifier for a matchmaking rule set

    

    

  RuleSetBody -> (string)

    

    Collection of matchmaking rules, formatted as a JSON string. (Note that comments14 are not allowed in JSON, but most elements support a description field.)

    

    

  CreationTime -> (timestamp)

    

    Time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example "1469498468.057").

    

    

  

