[ :ref:`aws <cli:aws>` . :ref:`apigateway <cli:aws apigateway>` ]

.. _cli:aws apigateway get-tags:


********
get-tags
********



===========
Description
===========



Gets the  Tags collection for a given resource.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/apigateway-2015-07-09/GetTags>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-tags
  --resource-arn <value>
  [--position <value>]
  [--limit <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--resource-arn`` (string)


  [Required] The ARN of a resource that can be tagged. The resource ARN must be URL-encoded. At present,  Stage is the only taggable resource.

  

``--position`` (string)


  (Not currently supported) The current pagination position in the paged result set.

  

``--limit`` (integer)


  (Not currently supported) The maximum number of returned results per page. The default value is 25 and the maximum value is 500.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

tags -> (map)

  

  The collection of tags. Each tag element is associated with a given resource.

  

  key -> (string)

    

    

  value -> (string)

    

    

  

