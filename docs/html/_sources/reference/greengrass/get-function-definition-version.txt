[ :ref:`aws <cli:aws>` . :ref:`greengrass <cli:aws greengrass>` ]

.. _cli:aws greengrass get-function-definition-version:


*******************************
get-function-definition-version
*******************************



===========
Description
===========

Retrieves information about a Lambda function definition version, including which Lambda functions are included in the version and their configurations.

See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/greengrass-2017-06-07/GetFunctionDefinitionVersion>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-function-definition-version
  --function-definition-id <value>
  --function-definition-version-id <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--function-definition-id`` (string)
The ID of the Lambda function definition.

``--function-definition-version-id`` (string)
The ID of the function definition version.

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

Arn -> (string)

  The ARN of the function definition version.

  

CreationTimestamp -> (string)

  The time, in milliseconds since the epoch, when the function definition version was created.

  

Definition -> (structure)

  Information on the definition.

  Functions -> (list)

    A list of Lambda functions in this function definition version.

    (structure)

      Information about a Lambda function.

      FunctionArn -> (string)

        The ARN of the Lambda function.

        

      FunctionConfiguration -> (structure)

        The configuration of the Lambda function.

        EncodingType -> (string)

          The expected encoding type of the input payload for the function. The default is ''json''.

          

        Environment -> (structure)

          The environment configuration of the function.

          AccessSysfs -> (boolean)

            If true, the Lambda function is allowed to access the host's /sys folder. Use this when the Lambda function needs to read device information from /sys.

            

          ResourceAccessPolicies -> (list)

            A list of the resources, with their permissions, to which the Lambda function will be granted access. A Lambda function can have at most 10 resources.

            (structure)

              A policy used by the function to access a resource.

              Permission -> (string)

                The permissions that the Lambda function has to the resource. Can be one of ''rw'' (read/write) or ''ro'' (read-only).

                

              ResourceId -> (string)

                The ID of the resource. (This ID is assigned to the resource when you create the resource definiton.)

                

              

            

          Variables -> (map)

            Environment variables for the Lambda function's configuration.

            key -> (string)

              

              

            value -> (string)

              

              

            

          

        ExecArgs -> (string)

          The execution arguments.

          

        Executable -> (string)

          The name of the function executable.

          

        MemorySize -> (integer)

          The memory size, in KB, which the function requires.

          

        Pinned -> (boolean)

          True if the function is pinned. Pinned means the function is long-lived and starts when the core starts.

          

        Timeout -> (integer)

          The allowed function execution time, after which Lambda should terminate the function. This timeout still applies to pinned lambdas for each request.

          

        

      Id -> (string)

        The ID of the Lambda function.

        

      

    

  

Id -> (string)

  The ID of the function definition version.

  

Version -> (string)

  The version of the function definition version.

  

