[ :ref:`aws <cli:aws>` . :ref:`sagemaker <cli:aws sagemaker>` ]

.. _cli:aws sagemaker create-transform-job:


********************
create-transform-job
********************



===========
Description
===========



Starts a transform job. A transform job uses a trained model to get inferences on a dataset and saves these results to an Amazon S3 location that you specify.

 

To perform batch transformations, you create a transform job and use the data that you have readily available.

 

In the request body, you provide the following:

 

 
* ``TransformJobName`` - Identifies the transform job. The name must be unique within an AWS Region in an AWS account. 
 
* ``ModelName`` - Identifies the model to use. ``ModelName`` must be the name of an existing Amazon SageMaker model in the same AWS Region and AWS account. For information on creating a model, see  CreateModel . 
 
* ``TransformInput`` - Describes the dataset to be transformed and the Amazon S3 location where it is stored. 
 
* ``TransformOutput`` - Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job. 
 
* ``TransformResources`` - Identifies the ML compute instances for the transform job. 
 

 

For more information about how batch transformation works Amazon SageMaker, see `How It Works <http://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html>`__ . 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/sagemaker-2017-07-24/CreateTransformJob>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-transform-job
  --transform-job-name <value>
  --model-name <value>
  [--max-concurrent-transforms <value>]
  [--max-payload-in-mb <value>]
  [--batch-strategy <value>]
  [--environment <value>]
  --transform-input <value>
  --transform-output <value>
  --transform-resources <value>
  [--tags <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--transform-job-name`` (string)


  The name of the transform job. The name must be unique within an AWS Region in an AWS account. 

  

``--model-name`` (string)


  The name of the model that you want to use for the transform job. ``ModelName`` must be the name of an existing Amazon SageMaker model within an AWS Region in an AWS account.

  

``--max-concurrent-transforms`` (integer)


  The maximum number of parallel requests that can be sent to each instance in a transform job. This is good for algorithms that implement multiple workers on larger instances . The default value is ``1`` . To allow Amazon SageMaker to determine the appropriate number for ``MaxConcurrentTransforms`` , set the value to ``0`` .

  

``--max-payload-in-mb`` (integer)


  The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata). The value in ``MaxPayloadInMB`` must be greater or equal to the size of a single record. You can approximate the size of a record by dividing the size of your dataset by the number of records. Then multiply this value by the number of records you want in a mini-batch. It is recommended to enter a value slightly larger than this to ensure the records fit within the maximum payload size. The default value is ``6`` MB. For an unlimited payload size, set the value to ``0`` .

  

``--batch-strategy`` (string)


  Determines the number of records included in a single mini-batch. ``SingleRecord`` means only one record is used per mini-batch. ``MultiRecord`` means a mini-batch is set to contain as many records that can fit within the ``MaxPayloadInMB`` limit.

   

  Batch transform will automatically split your input data into whatever payload size is specified if you set ``SplitType`` to ``Line`` and ``BatchStrategy`` to ``MultiRecord`` . There's no need to split the dataset into smaller files or to use larger payload sizes unless the records in your dataset are very large.

  

  Possible values:

  
  *   ``MultiRecord``

  
  *   ``SingleRecord``

  

  

``--environment`` (map)


  The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.

  



Shorthand Syntax::

    KeyName1=string,KeyName2=string




JSON Syntax::

  {"string": "string"
    ...}



``--transform-input`` (structure)


  Describes the input source and the way the transform job consumes it.

  



Shorthand Syntax::

    DataSource={S3DataSource={S3DataType=string,S3Uri=string}},ContentType=string,CompressionType=string,SplitType=string




JSON Syntax::

  {
    "DataSource": {
      "S3DataSource": {
        "S3DataType": "ManifestFile"|"S3Prefix",
        "S3Uri": "string"
      }
    },
    "ContentType": "string",
    "CompressionType": "None"|"Gzip",
    "SplitType": "None"|"Line"|"RecordIO"
  }



``--transform-output`` (structure)


  Describes the results of the transform job.

  



Shorthand Syntax::

    S3OutputPath=string,Accept=string,AssembleWith=string,KmsKeyId=string




JSON Syntax::

  {
    "S3OutputPath": "string",
    "Accept": "string",
    "AssembleWith": "None"|"Line",
    "KmsKeyId": "string"
  }



``--transform-resources`` (structure)


  Describes the resources, including ML instance types and ML instance count, to use for the transform job.

  



Shorthand Syntax::

    InstanceType=string,InstanceCount=integer,VolumeKmsKeyId=string




JSON Syntax::

  {
    "InstanceType": "ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge",
    "InstanceCount": integer,
    "VolumeKmsKeyId": "string"
  }



``--tags`` (list)


  An array of key-value pairs. Adding tags is optional. For more information, see `Using Cost Allocation Tags <http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what>`__ in the *AWS Billing and Cost Management User Guide* .

  



Shorthand Syntax::

    Key=string,Value=string ...




JSON Syntax::

  [
    {
      "Key": "string",
      "Value": "string"
    }
    ...
  ]



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

TransformJobArn -> (string)

  

  The Amazon Resource Name (ARN) of the transform job.

  

  

