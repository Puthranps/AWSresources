[ :ref:`aws <cli:aws>` . :ref:`batch <cli:aws batch>` ]

.. _cli:aws batch submit-job:


**********
submit-job
**********



===========
Description
===========



Submits an AWS Batch job from a job definition. Parameters specified during  SubmitJob override parameters defined in the job definition. 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/batch-2016-08-10/SubmitJob>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    submit-job
  --job-name <value>
  --job-queue <value>
  [--array-properties <value>]
  [--depends-on <value>]
  --job-definition <value>
  [--parameters <value>]
  [--container-overrides <value>]
  [--retry-strategy <value>]
  [--timeout <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--job-name`` (string)


  The name of the job. The first character must be alphanumeric, and up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed. 

  

``--job-queue`` (string)


  The job queue into which the job is submitted. You can specify either the name or the Amazon Resource Name (ARN) of the queue. 

  

``--array-properties`` (structure)


  The array properties for the submitted job, such as the size of the array. The array size can be between 2 and 10,000. If you specify array properties for a job, it becomes an array job. For more information, see `Array Jobs <http://docs.aws.amazon.com/batch/latest/userguide/array_jobs.html>`__ in the *AWS Batch User Guide* .

  



Shorthand Syntax::

    size=integer




JSON Syntax::

  {
    "size": integer
  }



``--depends-on`` (list)


  A list of dependencies for the job. A job can depend upon a maximum of 20 jobs. You can specify a ``SEQUENTIAL`` type dependency without specifying a job ID for array jobs so that each child array job completes sequentially, starting at index 0. You can also specify an ``N_TO_N`` type dependency with a job ID for array jobs so that each index child of this job must wait for the corresponding index child of each dependency to complete before it can begin.

  



Shorthand Syntax::

    jobId=string,type=string ...




JSON Syntax::

  [
    {
      "jobId": "string",
      "type": "N_TO_N"|"SEQUENTIAL"
    }
    ...
  ]



``--job-definition`` (string)


  The job definition used by this job. This value can be either a ``name:revision`` or the Amazon Resource Name (ARN) for the job definition.

  

``--parameters`` (map)


  Additional parameters passed to the job that replace parameter substitution placeholders that are set in the job definition. Parameters are specified as a key and value pair mapping. Parameters in a ``SubmitJob`` request override any corresponding parameter defaults from the job definition.

  



Shorthand Syntax::

    KeyName1=string,KeyName2=string




JSON Syntax::

  {"string": "string"
    ...}



``--container-overrides`` (structure)


  A list of container overrides in JSON format that specify the name of a container in the specified job definition and the overrides it should receive. You can override the default command for a container (that is specified in the job definition or the Docker image) with a ``command`` override. You can also override existing environment variables (that are specified in the job definition or Docker image) on a container or add new environment variables to it with an ``environment`` override.

  



Shorthand Syntax::

    vcpus=integer,memory=integer,command=string,string,environment=[{name=string,value=string},{name=string,value=string}]




JSON Syntax::

  {
    "vcpus": integer,
    "memory": integer,
    "command": ["string", ...],
    "environment": [
      {
        "name": "string",
        "value": "string"
      }
      ...
    ]
  }



``--retry-strategy`` (structure)


  The retry strategy to use for failed jobs from this  SubmitJob operation. When a retry strategy is specified here, it overrides the retry strategy defined in the job definition.

  



Shorthand Syntax::

    attempts=integer




JSON Syntax::

  {
    "attempts": integer
  }



``--timeout`` (structure)


  The timeout configuration for this  SubmitJob operation. You can specify a timeout duration after which AWS Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it is not retried. The minimum value for the timeout is 60 seconds. This configuration overrides any timeout configuration specified in the job definition. For array jobs, child jobs have the same timeout configuration as the parent job. For more information, see `Job Timeouts <http://docs.aws.amazon.com/AmazonECS/latest/developerguide/job_timeouts.html>`__ in the *Amazon Elastic Container Service Developer Guide* .

  



Shorthand Syntax::

    attemptDurationSeconds=integer




JSON Syntax::

  {
    "attemptDurationSeconds": integer
  }



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To submit a job**

This example submits a simple container job called `example` to the `HighPriority` job queue.

Command::

  aws batch submit-job --job-name example --job-queue HighPriority  --job-definition sleep60

Output::

  {
      "jobName": "example",
      "jobId": "876da822-4198-45f2-a252-6cea32512ea8"
  }


======
Output
======

jobName -> (string)

  

  The name of the job. 

  

  

jobId -> (string)

  

  The unique identifier for the job.

  

  

