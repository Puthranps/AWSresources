[ :ref:`aws <cli:aws>` . :ref:`directconnect <cli:aws directconnect>` ]

.. _cli:aws directconnect update-lag:


**********
update-lag
**********



===========
Description
===========



Updates the attributes of the specified link aggregation group (LAG).

 

You can update the following attributes:

 

 
* The name of the LAG. 
 
* The value for the minimum number of connections that must be operational for the LAG itself to be operational.  
 

 

When you create a LAG, the default value for the minimum number of operational connections is zero (0). If you update this value and the number of operational connections falls below the specified value, the LAG automatically goes down to avoid over-utilization of the remaining connections. Adjust this value with care, as it could force the LAG down if it is set higher than the current number of operational connections.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/directconnect-2012-10-25/UpdateLag>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    update-lag
  --lag-id <value>
  [--lag-name <value>]
  [--minimum-links <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--lag-id`` (string)


  The ID of the LAG.

  

``--lag-name`` (string)


  The name of the LAG.

  

``--minimum-links`` (integer)


  The minimum number of physical connections that must be operational for the LAG itself to be operational.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To update a LAG**

The following example changes the name of the specified LAG.

Command::

  aws directconnect update-lag --lag-id dxlag-ffjhj9lx --lag-name 2ConnLag

Output::

  {
    "awsDevice": "CSVA1-23u8tlpaz8iks", 
    "numberOfConnections": 2, 
    "lagState": "down", 
    "ownerAccount": "123456789012", 
    "lagName": "2ConnLag", 
    "connections": [
        {
            "ownerAccount": "123456789012", 
            "connectionId": "dxcon-fflqyj95", 
            "lagId": "dxlag-ffjhj9lx", 
            "connectionState": "requested", 
            "bandwidth": "1Gbps", 
            "location": "CSVA1", 
            "connectionName": "Requested Connection 2 for Lag dxlag-ffjhj9lx", 
            "region": "us-east-1"
        }, 
        {
            "ownerAccount": "123456789012", 
            "connectionId": "dxcon-ffqr6x5q", 
            "lagId": "dxlag-ffjhj9lx", 
            "connectionState": "requested", 
            "bandwidth": "1Gbps", 
            "location": "CSVA1", 
            "connectionName": "Requested Connection 1 for Lag dxlag-ffjhj9lx", 
            "region": "us-east-1"
        }
    ], 
    "lagId": "dxlag-ffjhj9lx", 
    "minimumLinks": 0, 
    "connectionsBandwidth": "1Gbps", 
    "region": "us-east-1", 
    "location": "CSVA1"
  }


======
Output
======

connectionsBandwidth -> (string)

  

  The individual bandwidth of the physical connections bundled by the LAG. The possible values are 1Gbps and 10Gbps.

  

  

numberOfConnections -> (integer)

  

  The number of physical connections bundled by the LAG, up to a maximum of 10.

  

  

lagId -> (string)

  

  The ID of the LAG.

  

  

ownerAccount -> (string)

  

  The ID of the AWS account that owns the LAG.

  

  

lagName -> (string)

  

  The name of the LAG.

  

  

lagState -> (string)

  

  The state of the LAG. The following are the possible values:

   

   
  * ``requested`` : The initial state of a LAG. The LAG stays in the requested state until the Letter of Authorization (LOA) is available. 
   
  * ``pending`` : The LAG has been approved and is being initialized. 
   
  * ``available`` : The network link is established and the LAG is ready for use. 
   
  * ``down`` : The network link is down. 
   
  * ``deleting`` : The LAG is being deleted. 
   
  * ``deleted`` : The LAG is deleted. 
   

  

  

location -> (string)

  

  The location of the LAG.

  

  

region -> (string)

  

  The AWS Region where the connection is located.

  

  

minimumLinks -> (integer)

  

  The minimum number of physical connections that must be operational for the LAG itself to be operational.

  

  

awsDevice -> (string)

  

  The Direct Connect endpoint that hosts the LAG.

  

  

awsDeviceV2 -> (string)

  

  The Direct Connect endpoint that hosts the LAG.

  

  

connections -> (list)

  

  The connections bundled by the LAG.

  

  (structure)

    

    Information about an AWS Direct Connect connection.

    

    ownerAccount -> (string)

      

      The ID of the AWS account that owns the connection.

      

      

    connectionId -> (string)

      

      The ID of the connection.

      

      

    connectionName -> (string)

      

      The name of the connection.

      

      

    connectionState -> (string)

      

      The state of the connection. The following are the possible values:

       

       
      * ``ordering`` : The initial state of a hosted connection provisioned on an interconnect. The connection stays in the ordering state until the owner of the hosted connection confirms or declines the connection order. 
       
      * ``requested`` : The initial state of a standard connection. The connection stays in the requested state until the Letter of Authorization (LOA) is sent to the customer. 
       
      * ``pending`` : The connection has been approved and is being initialized. 
       
      * ``available`` : The network link is up and the connection is ready for use. 
       
      * ``down`` : The network link is down. 
       
      * ``deleting`` : The connection is being deleted. 
       
      * ``deleted`` : The connection has been deleted. 
       
      * ``rejected`` : A hosted connection in the ``ordering`` state enters the ``rejected`` state if it is deleted by the customer. 
       

      

      

    region -> (string)

      

      The AWS Region where the connection is located.

      

      

    location -> (string)

      

      The location of the connection.

      

      

    bandwidth -> (string)

      

      The bandwidth of the connection.

      

      

    vlan -> (integer)

      

      The ID of the VLAN.

      

      

    partnerName -> (string)

      

      The name of the AWS Direct Connect service provider associated with the connection.

      

      

    loaIssueTime -> (timestamp)

      

      The time of the most recent call to  DescribeLoa for this connection.

      

      

    lagId -> (string)

      

      The ID of the LAG.

      

      

    awsDevice -> (string)

      

      The Direct Connect endpoint on which the physical connection terminates.

      

      

    jumboFrameCapable -> (boolean)

      

      Indicates whether jumbo frames (9001 MTU) are supported.

      

      

    awsDeviceV2 -> (string)

      

      The Direct Connect endpoint on which the physical connection terminates.

      

      

    

  

allowsHostedConnections -> (boolean)

  

  Indicates whether the LAG can host other connections.

  

  

jumboFrameCapable -> (boolean)

  

  Indicates whether jumbo frames (9001 MTU) are supported.

  

  

