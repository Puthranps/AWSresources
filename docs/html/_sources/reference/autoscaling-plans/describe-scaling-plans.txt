[ :ref:`aws <cli:aws>` . :ref:`autoscaling-plans <cli:aws autoscaling-plans>` ]

.. _cli:aws autoscaling-plans describe-scaling-plans:


**********************
describe-scaling-plans
**********************



===========
Description
===========



Describes the specified scaling plans or all of your scaling plans.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/DescribeScalingPlans>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-scaling-plans
  [--scaling-plan-names <value>]
  [--scaling-plan-version <value>]
  [--application-sources <value>]
  [--max-results <value>]
  [--next-token <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--scaling-plan-names`` (list)


  The names of the scaling plans (up to 10). If you specify application sources, you cannot specify scaling plan names.

  



Syntax::

  "string" "string" ...



``--scaling-plan-version`` (long)


  The version of the scaling plan. If you specify a scaling plan version, you must also specify a scaling plan name.

  

``--application-sources`` (list)


  The sources for the applications (up to 10). If you specify scaling plan names, you cannot specify application sources.

  



JSON Syntax::

  [
    {
      "CloudFormationStackARN": "string",
      "TagFilters": [
        {
          "Key": "string",
          "Values": ["string", ...]
        }
        ...
      ]
    }
    ...
  ]



``--max-results`` (integer)


  The maximum number of scalable resources to return. This value can be between 1 and 50. The default value is 50.

  

``--next-token`` (string)


  The token for the next set of results.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ScalingPlans -> (list)

  

  Information about the scaling plans.

  

  (structure)

    

    Represents a scaling plan.

    

    ScalingPlanName -> (string)

      

      The name of the scaling plan.

      

      

    ScalingPlanVersion -> (long)

      

      The version of the scaling plan.

      

      

    ApplicationSource -> (structure)

      

      The application source.

      

      CloudFormationStackARN -> (string)

        

        The Amazon Resource Name (ARN) of a CloudFormation stack.

        

        

      TagFilters -> (list)

        

        A set of tags (up to 50).

        

        (structure)

          

          Represents a tag.

          

          Key -> (string)

            

            The tag key.

            

            

          Values -> (list)

            

            The tag values (0 to 20).

            

            (string)

              

              

            

          

        

      

    ScalingInstructions -> (list)

      

      The scaling instructions.

      

      (structure)

        

        Specifies the scaling configuration for a scalable resource.

        

        ServiceNamespace -> (string)

          

          The namespace of the AWS service.

          

          

        ResourceId -> (string)

          

          The ID of the resource. This string consists of the resource type and unique identifier.

           

           
          * Auto Scaling group - The resource type is ``autoScalingGroup`` and the unique identifier is the name of the Auto Scaling group. Example: ``autoScalingGroup/my-asg`` . 
           
          * ECS service - The resource type is ``service`` and the unique identifier is the cluster name and service name. Example: ``service/default/sample-webapp`` . 
           
          * Spot fleet request - The resource type is ``spot-fleet-request`` and the unique identifier is the Spot fleet request ID. Example: ``spot-fleet-request/sfr-73fbd2ce-aa30-494c-8788-1cee4EXAMPLE`` . 
           
          * DynamoDB table - The resource type is ``table`` and the unique identifier is the resource ID. Example: ``table/my-table`` . 
           
          * DynamoDB global secondary index - The resource type is ``index`` and the unique identifier is the resource ID. Example: ``table/my-table/index/my-table-index`` . 
           
          * Aurora DB cluster - The resource type is ``cluster`` and the unique identifier is the cluster name. Example: ``cluster:my-db-cluster`` . 
           

          

          

        ScalableDimension -> (string)

          

          The scalable dimension associated with the resource.

           

           
          * ``autoscaling:autoScalingGroup:DesiredCapacity`` - The desired capacity of an Auto Scaling group. 
           
          * ``ecs:service:DesiredCount`` - The desired task count of an ECS service. 
           
          * ``ec2:spot-fleet-request:TargetCapacity`` - The target capacity of a Spot fleet request. 
           
          * ``dynamodb:table:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB table. 
           
          * ``dynamodb:table:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB table. 
           
          * ``dynamodb:index:ReadCapacityUnits`` - The provisioned read capacity for a DynamoDB global secondary index. 
           
          * ``dynamodb:index:WriteCapacityUnits`` - The provisioned write capacity for a DynamoDB global secondary index. 
           
          * ``rds:cluster:ReadReplicaCount`` - The count of Aurora Replicas in an Aurora DB cluster. Available for Aurora MySQL-compatible edition. 
           

          

          

        MinCapacity -> (integer)

          

          The minimum value to scale to in response to a scale in event.

          

          

        MaxCapacity -> (integer)

          

          The maximum value to scale to in response to a scale out event.

          

          

        TargetTrackingConfigurations -> (list)

          

          The target tracking scaling policies (up to 10).

          

          (structure)

            

            Represents a target tracking scaling policy.

            

            PredefinedScalingMetricSpecification -> (structure)

              

              A predefined metric.

              

              PredefinedScalingMetricType -> (string)

                

                The metric type. The ``ALBRequestCountPerTarget`` metric type applies only to Auto Scaling groups, Sport Fleet requests, and ECS services.

                

                

              ResourceLabel -> (string)

                

                Identifies the resource associated with the metric type. You can't specify a resource label unless the metric type is ``ALBRequestCountPerTarget`` and there is a target group for an Application Load Balancer attached to the Auto Scaling group, Spot Fleet request, or ECS service.

                 

                The format is app/<load-balancer-name>/<load-balancer-id>/targetgroup/<target-group-name>/<target-group-id>, where:

                 

                 
                * app/<load-balancer-name>/<load-balancer-id> is the final portion of the load balancer ARN 
                 
                * targetgroup/<target-group-name>/<target-group-id> is the final portion of the target group ARN. 
                 

                

                

              

            CustomizedScalingMetricSpecification -> (structure)

              

              A customized metric.

              

              MetricName -> (string)

                

                The name of the metric.

                

                

              Namespace -> (string)

                

                The namespace of the metric.

                

                

              Dimensions -> (list)

                

                The dimensions of the metric.

                

                (structure)

                  

                  Represents a dimension for a customized metric.

                  

                  Name -> (string)

                    

                    The name of the dimension.

                    

                    

                  Value -> (string)

                    

                    The value of the dimension.

                    

                    

                  

                

              Statistic -> (string)

                

                The statistic of the metric.

                

                

              Unit -> (string)

                

                The unit of the metric.

                

                

              

            TargetValue -> (double)

              

              The target value for the metric. The range is 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2).

              

              

            DisableScaleIn -> (boolean)

              

              Indicates whether scale in by the target tracking policy is disabled. If the value is ``true`` , scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is ``false`` .

              

              

            ScaleOutCooldown -> (integer)

              

              The amount of time, in seconds, after a scale out activity completes before another scale out activity can start. This value is not used if the scalable resource is an Auto Scaling group.

               

              While the cooldown period is in effect, the capacity that has been added by the previous scale out event that initiated the cooldown is calculated as part of the desired capacity for the next scale out. The intention is to continuously (but not excessively) scale out.

              

              

            ScaleInCooldown -> (integer)

              

              The amount of time, in seconds, after a scale in activity completes before another scale in activity can start. This value is not used if the scalable resource is an Auto Scaling group.

               

              The cooldown period is used to block subsequent scale in requests until it has expired. The intention is to scale in conservatively to protect your application's availability. However, if another alarm triggers a scale out policy during the cooldown period after a scale-in, AWS Auto Scaling scales out your scalable target immediately.

              

              

            EstimatedInstanceWarmup -> (integer)

              

              The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. This value is used only if the resource is an Auto Scaling group.

              

              

            

          

        

      

    StatusCode -> (string)

      

      The status of the scaling plan.

       

       
      * ``Active`` - The scaling plan is active. 
       
      * ``ActiveWithProblems`` - The scaling plan is active, but the scaling configuration for one or more resources could not be applied. 
       
      * ``CreationInProgress`` - The scaling plan is being created. 
       
      * ``CreationFailed`` - The scaling plan could not be created. 
       
      * ``DeletionInProgress`` - The scaling plan is being deleted. 
       
      * ``DeletionFailed`` - The scaling plan could not be deleted. 
       

      

      

    StatusMessage -> (string)

      

      A simple message about the current status of the scaling plan.

      

      

    StatusStartTime -> (timestamp)

      

      The Unix timestamp when the scaling plan entered the current status.

      

      

    CreationTime -> (timestamp)

      

      The Unix timestamp when the scaling plan was created.

      

      

    

  

NextToken -> (string)

  

  The token required to get the next set of results. This value is ``null`` if there are no more results to return.

  

  

