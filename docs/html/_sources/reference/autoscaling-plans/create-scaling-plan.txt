[ :ref:`aws <cli:aws>` . :ref:`autoscaling-plans <cli:aws autoscaling-plans>` ]

.. _cli:aws autoscaling-plans create-scaling-plan:


*******************
create-scaling-plan
*******************



===========
Description
===========



Creates a scaling plan.

 

A scaling plan contains a set of instructions used to configure dynamic scaling for the scalable resources in your application. AWS Auto Scaling creates target tracking scaling policies based on the scaling instructions in your scaling plan.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/autoscaling-plans-2018-01-06/CreateScalingPlan>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-scaling-plan
  --scaling-plan-name <value>
  --application-source <value>
  --scaling-instructions <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--scaling-plan-name`` (string)


  The name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.

  

``--application-source`` (structure)


  A CloudFormation stack or set of tags. You can create one scaling plan per application source.

  



JSON Syntax::

  {
    "CloudFormationStackARN": "string",
    "TagFilters": [
      {
        "Key": "string",
        "Values": ["string", ...]
      }
      ...
    ]
  }



``--scaling-instructions`` (list)


  The scaling instructions.

  



JSON Syntax::

  [
    {
      "ServiceNamespace": "autoscaling"|"ecs"|"ec2"|"rds"|"dynamodb",
      "ResourceId": "string",
      "ScalableDimension": "autoscaling:autoScalingGroup:DesiredCapacity"|"ecs:service:DesiredCount"|"ec2:spot-fleet-request:TargetCapacity"|"rds:cluster:ReadReplicaCount"|"dynamodb:table:ReadCapacityUnits"|"dynamodb:table:WriteCapacityUnits"|"dynamodb:index:ReadCapacityUnits"|"dynamodb:index:WriteCapacityUnits",
      "MinCapacity": integer,
      "MaxCapacity": integer,
      "TargetTrackingConfigurations": [
        {
          "PredefinedScalingMetricSpecification": {
            "PredefinedScalingMetricType": "ASGAverageCPUUtilization"|"ASGAverageNetworkIn"|"ASGAverageNetworkOut"|"DynamoDBReadCapacityUtilization"|"DynamoDBWriteCapacityUtilization"|"ECSServiceAverageCPUUtilization"|"ECSServiceAverageMemoryUtilization"|"ALBRequestCountPerTarget"|"RDSReaderAverageCPUUtilization"|"RDSReaderAverageDatabaseConnections"|"EC2SpotFleetRequestAverageCPUUtilization"|"EC2SpotFleetRequestAverageNetworkIn"|"EC2SpotFleetRequestAverageNetworkOut",
            "ResourceLabel": "string"
          },
          "CustomizedScalingMetricSpecification": {
            "MetricName": "string",
            "Namespace": "string",
            "Dimensions": [
              {
                "Name": "string",
                "Value": "string"
              }
              ...
            ],
            "Statistic": "Average"|"Minimum"|"Maximum"|"SampleCount"|"Sum",
            "Unit": "string"
          },
          "TargetValue": double,
          "DisableScaleIn": true|false,
          "ScaleOutCooldown": integer,
          "ScaleInCooldown": integer,
          "EstimatedInstanceWarmup": integer
        }
        ...
      ]
    }
    ...
  ]



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ScalingPlanVersion -> (long)

  

  The version of the scaling plan. This value is always 1.

  

  

