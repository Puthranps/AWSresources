[ :ref:`aws <cli:aws>` . :ref:`glue <cli:aws glue>` ]

.. _cli:aws glue get-tables:


**********
get-tables
**********



===========
Description
===========



Retrieves the definitions of some or all of the tables in a given ``Database`` .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/glue-2017-03-31/GetTables>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


``get-tables`` is a paginated operation. Multiple API calls may be issued in order to retrieve the entire data set of results. You can disable pagination by providing the ``--no-paginate`` argument.
When using ``--output text`` and the ``--query`` argument on a paginated response, the ``--query`` argument must extract data from the results of the following query expressions: ``TableList``


========
Synopsis
========

::

    get-tables
  [--catalog-id <value>]
  --database-name <value>
  [--expression <value>]
  [--cli-input-json <value>]
  [--starting-token <value>]
  [--page-size <value>]
  [--max-items <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--catalog-id`` (string)


  The ID of the Data Catalog where the tables reside. If none is supplied, the AWS account ID is used by default.

  

``--database-name`` (string)


  The database in the catalog whose tables to list. For Hive compatibility, this name is entirely lowercase.

  

``--expression`` (string)


  A regular expression pattern. If present, only those tables whose names match the pattern are returned.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--starting-token`` (string)
 

  A token to specify where to start paginating. This is the ``NextToken`` from a previously truncated response.

   

  For usage examples, see `Pagination <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ in the *AWS Command Line Interface User Guide* .

   

``--page-size`` (integer)
 

  The size of each page to get in the AWS service call. This does not affect the number of items returned in the command's output. Setting a smaller page size results in more calls to the AWS service, retrieving fewer items in each call. This can help prevent the AWS service calls from timing out.

   

  For usage examples, see `Pagination <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ in the *AWS Command Line Interface User Guide* .

   

``--max-items`` (integer)
 

  The total number of items to return in the command's output. If the total number of items available is more than the value specified, a ``NextToken`` is provided in the command's output. To resume pagination, provide the ``NextToken`` value in the ``starting-token`` argument of a subsequent command. **Do not** use the ``NextToken`` response element directly outside of the AWS CLI.

   

  For usage examples, see `Pagination <https://docs.aws.amazon.com/cli/latest/userguide/pagination.html>`__ in the *AWS Command Line Interface User Guide* .

   

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

TableList -> (list)

  

  A list of the requested ``Table`` objects.

  

  (structure)

    

    Represents a collection of related data organized in columns and rows.

    

    Name -> (string)

      

      Name of the table. For Hive compatibility, this must be entirely lowercase.

      

      

    DatabaseName -> (string)

      

      Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.

      

      

    Description -> (string)

      

      Description of the table.

      

      

    Owner -> (string)

      

      Owner of the table.

      

      

    CreateTime -> (timestamp)

      

      Time when the table definition was created in the Data Catalog.

      

      

    UpdateTime -> (timestamp)

      

      Last time the table was updated.

      

      

    LastAccessTime -> (timestamp)

      

      Last time the table was accessed. This is usually taken from HDFS, and may not be reliable.

      

      

    LastAnalyzedTime -> (timestamp)

      

      Last time column statistics were computed for this table.

      

      

    Retention -> (integer)

      

      Retention time for this table.

      

      

    StorageDescriptor -> (structure)

      

      A storage descriptor containing information about the physical storage of this table.

      

      Columns -> (list)

        

        A list of the ``Columns`` in the table.

        

        (structure)

          

          A column in a ``Table`` .

          

          Name -> (string)

            

            The name of the ``Column`` .

            

            

          Type -> (string)

            

            The datatype of data in the ``Column`` .

            

            

          Comment -> (string)

            

            Free-form text comment.

            

            

          

        

      Location -> (string)

        

        The physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.

        

        

      InputFormat -> (string)

        

        The input format: ``SequenceFileInputFormat`` (binary), or ``TextInputFormat`` , or a custom format.

        

        

      OutputFormat -> (string)

        

        The output format: ``SequenceFileOutputFormat`` (binary), or ``IgnoreKeyTextOutputFormat`` , or a custom format.

        

        

      Compressed -> (boolean)

        

        True if the data in the table is compressed, or False if not.

        

        

      NumberOfBuckets -> (integer)

        

        Must be specified if the table contains any dimension columns.

        

        

      SerdeInfo -> (structure)

        

        Serialization/deserialization (SerDe) information.

        

        Name -> (string)

          

          Name of the SerDe.

          

          

        SerializationLibrary -> (string)

          

          Usually the class that implements the SerDe. An example is: ``org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe`` .

          

          

        Parameters -> (map)

          

          These key-value pairs define initialization parameters for the SerDe.

          

          key -> (string)

            

            

          value -> (string)

            

            

          

        

      BucketColumns -> (list)

        

        A list of reducer grouping columns, clustering columns, and bucketing columns in the table.

        

        (string)

          

          

        

      SortColumns -> (list)

        

        A list specifying the sort order of each bucket in the table.

        

        (structure)

          

          Specifies the sort order of a sorted column.

          

          Column -> (string)

            

            The name of the column.

            

            

          SortOrder -> (integer)

            

            Indicates that the column is sorted in ascending order (``== 1`` ), or in descending order (``==0`` ).

            

            

          

        

      Parameters -> (map)

        

        User-supplied properties in key-value form.

        

        key -> (string)

          

          

        value -> (string)

          

          

        

      SkewedInfo -> (structure)

        

        Information about values that appear very frequently in a column (skewed values).

        

        SkewedColumnNames -> (list)

          

          A list of names of columns that contain skewed values.

          

          (string)

            

            

          

        SkewedColumnValues -> (list)

          

          A list of values that appear so frequently as to be considered skewed.

          

          (string)

            

            

          

        SkewedColumnValueLocationMaps -> (map)

          

          A mapping of skewed values to the columns that contain them.

          

          key -> (string)

            

            

          value -> (string)

            

            

          

        

      StoredAsSubDirectories -> (boolean)

        

        True if the table data is stored in subdirectories, or False if not.

        

        

      

    PartitionKeys -> (list)

      

      A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.

      

      (structure)

        

        A column in a ``Table`` .

        

        Name -> (string)

          

          The name of the ``Column`` .

          

          

        Type -> (string)

          

          The datatype of data in the ``Column`` .

          

          

        Comment -> (string)

          

          Free-form text comment.

          

          

        

      

    ViewOriginalText -> (string)

      

      If the table is a view, the original text of the view; otherwise ``null`` .

      

      

    ViewExpandedText -> (string)

      

      If the table is a view, the expanded text of the view; otherwise ``null`` .

      

      

    TableType -> (string)

      

      The type of this table (``EXTERNAL_TABLE`` , ``VIRTUAL_VIEW`` , etc.).

      

      

    Parameters -> (map)

      

      These key-value pairs define properties associated with the table.

      

      key -> (string)

        

        

      value -> (string)

        

        

      

    CreatedBy -> (string)

      

      Person or entity who created the table.

      

      

    

  

NextToken -> (string)

  

  A continuation token, present if the current list segment is not the last.

  

  

