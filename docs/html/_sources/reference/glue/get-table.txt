[ :ref:`aws <cli:aws>` . :ref:`glue <cli:aws glue>` ]

.. _cli:aws glue get-table:


*********
get-table
*********



===========
Description
===========



Retrieves the ``Table`` definition in a Data Catalog for a specified table.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/glue-2017-03-31/GetTable>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-table
  [--catalog-id <value>]
  --database-name <value>
  --name <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--catalog-id`` (string)


  The ID of the Data Catalog where the table resides. If none is supplied, the AWS account ID is used by default.

  

``--database-name`` (string)


  The name of the database in the catalog in which the table resides. For Hive compatibility, this name is entirely lowercase.

  

``--name`` (string)


  The name of the table for which to retrieve the definition. For Hive compatibility, this name is entirely lowercase.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

Table -> (structure)

  

  The ``Table`` object that defines the specified table.

  

  Name -> (string)

    

    Name of the table. For Hive compatibility, this must be entirely lowercase.

    

    

  DatabaseName -> (string)

    

    Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.

    

    

  Description -> (string)

    

    Description of the table.

    

    

  Owner -> (string)

    

    Owner of the table.

    

    

  CreateTime -> (timestamp)

    

    Time when the table definition was created in the Data Catalog.

    

    

  UpdateTime -> (timestamp)

    

    Last time the table was updated.

    

    

  LastAccessTime -> (timestamp)

    

    Last time the table was accessed. This is usually taken from HDFS, and may not be reliable.

    

    

  LastAnalyzedTime -> (timestamp)

    

    Last time column statistics were computed for this table.

    

    

  Retention -> (integer)

    

    Retention time for this table.

    

    

  StorageDescriptor -> (structure)

    

    A storage descriptor containing information about the physical storage of this table.

    

    Columns -> (list)

      

      A list of the ``Columns`` in the table.

      

      (structure)

        

        A column in a ``Table`` .

        

        Name -> (string)

          

          The name of the ``Column`` .

          

          

        Type -> (string)

          

          The datatype of data in the ``Column`` .

          

          

        Comment -> (string)

          

          Free-form text comment.

          

          

        

      

    Location -> (string)

      

      The physical location of the table. By default this takes the form of the warehouse location, followed by the database location in the warehouse, followed by the table name.

      

      

    InputFormat -> (string)

      

      The input format: ``SequenceFileInputFormat`` (binary), or ``TextInputFormat`` , or a custom format.

      

      

    OutputFormat -> (string)

      

      The output format: ``SequenceFileOutputFormat`` (binary), or ``IgnoreKeyTextOutputFormat`` , or a custom format.

      

      

    Compressed -> (boolean)

      

      True if the data in the table is compressed, or False if not.

      

      

    NumberOfBuckets -> (integer)

      

      Must be specified if the table contains any dimension columns.

      

      

    SerdeInfo -> (structure)

      

      Serialization/deserialization (SerDe) information.

      

      Name -> (string)

        

        Name of the SerDe.

        

        

      SerializationLibrary -> (string)

        

        Usually the class that implements the SerDe. An example is: ``org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe`` .

        

        

      Parameters -> (map)

        

        These key-value pairs define initialization parameters for the SerDe.

        

        key -> (string)

          

          

        value -> (string)

          

          

        

      

    BucketColumns -> (list)

      

      A list of reducer grouping columns, clustering columns, and bucketing columns in the table.

      

      (string)

        

        

      

    SortColumns -> (list)

      

      A list specifying the sort order of each bucket in the table.

      

      (structure)

        

        Specifies the sort order of a sorted column.

        

        Column -> (string)

          

          The name of the column.

          

          

        SortOrder -> (integer)

          

          Indicates that the column is sorted in ascending order (``== 1`` ), or in descending order (``==0`` ).

          

          

        

      

    Parameters -> (map)

      

      User-supplied properties in key-value form.

      

      key -> (string)

        

        

      value -> (string)

        

        

      

    SkewedInfo -> (structure)

      

      Information about values that appear very frequently in a column (skewed values).

      

      SkewedColumnNames -> (list)

        

        A list of names of columns that contain skewed values.

        

        (string)

          

          

        

      SkewedColumnValues -> (list)

        

        A list of values that appear so frequently as to be considered skewed.

        

        (string)

          

          

        

      SkewedColumnValueLocationMaps -> (map)

        

        A mapping of skewed values to the columns that contain them.

        

        key -> (string)

          

          

        value -> (string)

          

          

        

      

    StoredAsSubDirectories -> (boolean)

      

      True if the table data is stored in subdirectories, or False if not.

      

      

    

  PartitionKeys -> (list)

    

    A list of columns by which the table is partitioned. Only primitive types are supported as partition keys.

    

    (structure)

      

      A column in a ``Table`` .

      

      Name -> (string)

        

        The name of the ``Column`` .

        

        

      Type -> (string)

        

        The datatype of data in the ``Column`` .

        

        

      Comment -> (string)

        

        Free-form text comment.

        

        

      

    

  ViewOriginalText -> (string)

    

    If the table is a view, the original text of the view; otherwise ``null`` .

    

    

  ViewExpandedText -> (string)

    

    If the table is a view, the expanded text of the view; otherwise ``null`` .

    

    

  TableType -> (string)

    

    The type of this table (``EXTERNAL_TABLE`` , ``VIRTUAL_VIEW`` , etc.).

    

    

  Parameters -> (map)

    

    These key-value pairs define properties associated with the table.

    

    key -> (string)

      

      

    value -> (string)

      

      

    

  CreatedBy -> (string)

    

    Person or entity who created the table.

    

    

  

