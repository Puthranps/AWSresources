[ :ref:`aws <cli:aws>` . :ref:`secretsmanager <cli:aws secretsmanager>` ]

.. _cli:aws secretsmanager get-secret-value:


****************
get-secret-value
****************



===========
Description
===========



Retrieves the contents of the encrypted fields ``SecretString`` or ``SecretBinary`` from the specified version of a secret, whichever contains content.

 

 **Minimum permissions**  

 

To run this command, you must have the following permissions:

 

 
* secretsmanager:GetSecretValue 
 
* kms:Decrypt - required only if you use a customer-managed AWS KMS key to encrypt the secret. You do not need this permission to use the account's default AWS managed CMK for Secrets Manager. 
 

 

 **Related operations**  

 

 
* To create a new version of the secret with different encrypted information, use  PutSecretValue . 
 
* To retrieve the non-encrypted details for the secret, use  DescribeSecret . 
 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/secretsmanager-2017-10-17/GetSecretValue>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-secret-value
  --secret-id <value>
  [--version-id <value>]
  [--version-stage <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--secret-id`` (string)


  Specifies the secret containing the version that you want to retrieve. You can specify either the Amazon Resource Name (ARN) or the friendly name of the secret.

   

  .. note::

     

    If you specify an ARN, we generally recommend that you specify a complete ARN. You can specify a partial ARN too—for example, if you don’t include the final hyphen and six random characters that Secrets Manager adds at the end of the ARN when you created the secret. A partial ARN match can work as long as it uniquely matches only one secret. However, if your secret has a name that ends in a hyphen followed by six characters (before Secrets Manager adds the hyphen and six characters to the ARN) and you try to use that as a partial ARN, then those characters cause Secrets Manager to assume that you’re specifying a complete ARN. This confusion can cause unexpected results. To avoid this situation, we recommend that you don’t create secret names that end with a hyphen followed by six characters.

     

  

``--version-id`` (string)


  Specifies the unique identifier of the version of the secret that you want to retrieve. If you specify this parameter then don't specify ``VersionStage`` . If you don't specify either a ``VersionStage`` or ``VersionId`` then the default is to perform the operation on the version with the ``VersionStage`` value of ``AWSCURRENT`` .

   

  This value is typically a `UUID-type <https://wikipedia.org/wiki/Universally_unique_identifier>`__ value with 32 hexadecimal digits.

  

``--version-stage`` (string)


  Specifies the secret version that you want to retrieve by the staging label attached to the version.

   

  Staging labels are used to keep track of different versions during the rotation process. If you use this parameter then don't specify ``VersionId`` . If you don't specify either a ``VersionStage`` or ``VersionId`` , then the default is to perform the operation on the version with the ``VersionStage`` value of ``AWSCURRENT`` .

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To retrieve the encrypted secret value of a secret**

The following example shows how to retrieve the secret string value from the version of the secret that has the ``AWSPREVIOUS`` staging label attached. If you want to retrieve the ``AWSCURRENT`` version of the secret, then you can omit the ``--version-stage` parameter because it defaults to ``AWSCURRENT``. ::

	aws secretsmanager get-secret-value --secret-id MyTestDatabaseSecret --version-stage AWSPREVIOUS

The output shows the following: ::

	{
	  "ARN": "arn:aws:secretsmanager:us-west-2:123456789012:secret:MyTestDatabaseSecret-a1b2c3",
	  "Name": "MyTestDatabaseSecret",
	  "VersionId": "EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE",
	  "SecretString": "{\n  \"username\":\"david\",\n  \"password\":\"BnQw&XDWgaEeT9XGTT29\"\n}\n",
	  "VersionStages": [
	    "AWSPREVIOUS"
	  ],
	  "CreatedDate": 1523477145.713
	}


======
Output
======

ARN -> (string)

  

  The ARN of the secret.

  

  

Name -> (string)

  

  The friendly name of the secret.

  

  

VersionId -> (string)

  

  The unique identifier of this version of the secret.

  

  

SecretBinary -> (blob)

  

  The decrypted part of the protected secret information that was originally provided as binary data in the form of a byte array. The response parameter represents the binary data as a `base64-encoded <https://tools.ietf.org/html/rfc4648#section-4>`__ string.

   

  This parameter is not used if the secret is created by the Secrets Manager console.

   

  If you store custom information in this field of the secret, then you must code your Lambda rotation function to parse and interpret whatever you store in the ``SecretString`` or ``SecretBinary`` fields.

  

  

SecretString -> (string)

  

  The decrypted part of the protected secret information that was originally provided as a string.

   

  If you create this secret by using the Secrets Manager console then only the ``SecretString`` parameter contains data. Secrets Manager stores the information as a JSON structure of key/value pairs that the Lambda rotation function knows how to parse.

   

  If you store custom information in the secret by using the  CreateSecret ,  UpdateSecret , or  PutSecretValue API operations instead of the Secrets Manager console, or by using the **Other secret type** in the console, then you must code your Lambda rotation function to parse and interpret those values.

  

  

VersionStages -> (list)

  

  A list of all of the staging labels currently attached to this version of the secret.

  

  (string)

    

    

  

CreatedDate -> (timestamp)

  

  The date and time that this version of the secret was created.

  

  

