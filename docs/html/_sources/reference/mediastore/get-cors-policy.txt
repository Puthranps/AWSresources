[ :ref:`aws <cli:aws>` . :ref:`mediastore <cli:aws mediastore>` ]

.. _cli:aws mediastore get-cors-policy:


***************
get-cors-policy
***************



===========
Description
===========



Returns the cross-origin resource sharing (CORS) configuration information that is set for the container.

 

To use this operation, you must have permission to perform the ``MediaStore:GetCorsPolicy`` action. By default, the container owner has this permission and can grant it to others.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/mediastore-2017-09-01/GetCorsPolicy>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-cors-policy
  --container-name <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--container-name`` (string)


  The name of the container that the policy is assigned to.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

CorsPolicy -> (list)

  

  The CORS policy of the container. 

  

  (structure)

    

    A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.

    

    AllowedOrigins -> (list)

      

      One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).

       

      Each CORS rule must have at least one ``AllowedOrigin`` element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.

      

      (string)

        

        

      

    AllowedMethods -> (list)

      

      Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.

       

      Each CORS rule must contain at least one ``AllowedMethod`` and one ``AllowedOrigin`` element.

      

      (string)

        

        

      

    AllowedHeaders -> (list)

      

      Specifies which headers are allowed in a preflight ``OPTIONS`` request through the ``Access-Control-Request-Headers`` header. Each header name that is specified in ``Access-Control-Request-Headers`` must have a corresponding entry in the rule. Only the headers that were requested are sent back. 

       

      This element can contain only one wildcard character (*).

      

      (string)

        

        

      

    MaxAgeSeconds -> (integer)

      

      The time in seconds that your browser caches the preflight response for the specified resource.

       

      A CORS rule can have only one ``MaxAgeSeconds`` element.

      

      

    ExposeHeaders -> (list)

      

      One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript ``XMLHttpRequest`` object).

       

      This element is optional for each rule.

      

      (string)

        

        

      

    

  

