[ :ref:`aws <cli:aws>` . :ref:`lightsail <cli:aws lightsail>` ]

.. _cli:aws lightsail get-load-balancer-metric-data:


*****************************
get-load-balancer-metric-data
*****************************



===========
Description
===========



Returns information about health metrics for your Lightsail load balancer.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/lightsail-2016-11-28/GetLoadBalancerMetricData>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-load-balancer-metric-data
  --load-balancer-name <value>
  --metric-name <value>
  --period <value>
  --start-time <value>
  --end-time <value>
  --unit <value>
  --statistics <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--load-balancer-name`` (string)


  The name of the load balancer.

  

``--metric-name`` (string)


  The metric about which you want to return information. Valid values are listed below, along with the most useful ``statistics`` to include in your request.

   

   
  * **``ClientTLSNegotiationErrorCount`` ** - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.  ``Statistics`` : The most useful statistic is ``Sum`` . 
   
  * **``HealthyHostCount`` ** - The number of target instances that are considered healthy.  ``Statistics`` : The most useful statistic are ``Average`` , ``Minimum`` , and ``Maximum`` . 
   
  * **``UnhealthyHostCount`` ** - The number of target instances that are considered unhealthy.  ``Statistics`` : The most useful statistic are ``Average`` , ``Minimum`` , and ``Maximum`` . 
   
  * **``HTTPCode_LB_4XX_Count`` ** - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_LB_5XX_Count`` ** - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_2XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_3XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.   ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_4XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_5XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``InstanceResponseTime`` ** - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.  ``Statistics`` : The most useful statistic is ``Average`` . 
   
  * **``RejectedConnectionCount`` ** - The number of connections that were rejected because the load balancer had reached its maximum number of connections.  ``Statistics`` : The most useful statistic is ``Sum`` . 
   
  * **``RequestCount`` ** - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   

  

  Possible values:

  
  *   ``ClientTLSNegotiationErrorCount``

  
  *   ``HealthyHostCount``

  
  *   ``UnhealthyHostCount``

  
  *   ``HTTPCode_LB_4XX_Count``

  
  *   ``HTTPCode_LB_5XX_Count``

  
  *   ``HTTPCode_Instance_2XX_Count``

  
  *   ``HTTPCode_Instance_3XX_Count``

  
  *   ``HTTPCode_Instance_4XX_Count``

  
  *   ``HTTPCode_Instance_5XX_Count``

  
  *   ``InstanceResponseTime``

  
  *   ``RejectedConnectionCount``

  
  *   ``RequestCount``

  

  

``--period`` (integer)


  The granularity, in seconds, of the returned data points.

  

``--start-time`` (timestamp)


  The start time of the period.

  

``--end-time`` (timestamp)


  The end time of the period.

  

``--unit`` (string)


  The unit for the time period request. Valid values are listed below.

  

  Possible values:

  
  *   ``Seconds``

  
  *   ``Microseconds``

  
  *   ``Milliseconds``

  
  *   ``Bytes``

  
  *   ``Kilobytes``

  
  *   ``Megabytes``

  
  *   ``Gigabytes``

  
  *   ``Terabytes``

  
  *   ``Bits``

  
  *   ``Kilobits``

  
  *   ``Megabits``

  
  *   ``Gigabits``

  
  *   ``Terabits``

  
  *   ``Percent``

  
  *   ``Count``

  
  *   ``Bytes/Second``

  
  *   ``Kilobytes/Second``

  
  *   ``Megabytes/Second``

  
  *   ``Gigabytes/Second``

  
  *   ``Terabytes/Second``

  
  *   ``Bits/Second``

  
  *   ``Kilobits/Second``

  
  *   ``Megabits/Second``

  
  *   ``Gigabits/Second``

  
  *   ``Terabits/Second``

  
  *   ``Count/Second``

  
  *   ``None``

  

  

``--statistics`` (list)


  An array of statistics that you want to request metrics for. Valid values are listed below.

   

   
  * **``SampleCount`` ** - The count (number) of data points used for the statistical calculation. 
   
  * **``Average`` ** - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum. This comparison helps you to know when to increase or decrease your resources as needed. 
   
  * **``Sum`` ** - All values submitted for the matching metric added together. This statistic can be useful for determining the total volume of a metric. 
   
  * **``Minimum`` ** - The lowest value observed during the specified period. You can use this value to determine low volumes of activity for your application. 
   
  * **``Maximum`` ** - The highest value observed during the specified period. You can use this value to determine high volumes of activity for your application. 
   

  



Syntax::

  "string" "string" ...

  Where valid values are:
    Minimum
    Maximum
    Sum
    Average
    SampleCount





``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

metricName -> (string)

  

  The metric about which you are receiving information. Valid values are listed below, along with the most useful ``statistics`` to include in your request.

   

   
  * **``ClientTLSNegotiationErrorCount`` ** - The number of TLS connections initiated by the client that did not establish a session with the load balancer. Possible causes include a mismatch of ciphers or protocols.  ``Statistics`` : The most useful statistic is ``Sum`` . 
   
  * **``HealthyHostCount`` ** - The number of target instances that are considered healthy.  ``Statistics`` : The most useful statistic are ``Average`` , ``Minimum`` , and ``Maximum`` . 
   
  * **``UnhealthyHostCount`` ** - The number of target instances that are considered unhealthy.  ``Statistics`` : The most useful statistic are ``Average`` , ``Minimum`` , and ``Maximum`` . 
   
  * **``HTTPCode_LB_4XX_Count`` ** - The number of HTTP 4XX client error codes that originate from the load balancer. Client errors are generated when requests are malformed or incomplete. These requests have not been received by the target instance. This count does not include any response codes generated by the target instances.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_LB_5XX_Count`` ** - The number of HTTP 5XX server error codes that originate from the load balancer. This count does not include any response codes generated by the target instances.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_2XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_3XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.   ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_4XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``HTTPCode_Instance_5XX_Count`` ** - The number of HTTP response codes generated by the target instances. This does not include any response codes generated by the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   
  * **``InstanceResponseTime`` ** - The time elapsed, in seconds, after the request leaves the load balancer until a response from the target instance is received.  ``Statistics`` : The most useful statistic is ``Average`` . 
   
  * **``RejectedConnectionCount`` ** - The number of connections that were rejected because the load balancer had reached its maximum number of connections.  ``Statistics`` : The most useful statistic is ``Sum`` . 
   
  * **``RequestCount`` ** - The number of requests processed over IPv4. This count includes only the requests with a response generated by a target instance of the load balancer.  ``Statistics`` : The most useful statistic is ``Sum`` . Note that ``Minimum`` , ``Maximum`` , and ``Average`` all return ``1`` . 
   

  

  

metricData -> (list)

  

  An array of metric datapoint objects.

  

  (structure)

    

    Describes the metric data point.

    

    average -> (double)

      

      The average.

      

      

    maximum -> (double)

      

      The maximum.

      

      

    minimum -> (double)

      

      The minimum.

      

      

    sampleCount -> (double)

      

      The sample count.

      

      

    sum -> (double)

      

      The sum.

      

      

    timestamp -> (timestamp)

      

      The timestamp (e.g., ``1479816991.349`` ).

      

      

    unit -> (string)

      

      The unit. 

      

      

    

  

