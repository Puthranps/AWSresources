[ :ref:`aws <cli:aws>` . :ref:`servicediscovery <cli:aws servicediscovery>` ]

.. _cli:aws servicediscovery get-operation:


*************
get-operation
*************



===========
Description
===========



Gets information about any operation that returns an operation ID in the response, such as a ``CreateService`` request.

 

.. note::

   

  To get a list of operations that match specified criteria, see  ListOperations .

   



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/servicediscovery-2017-03-14/GetOperation>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-operation
  --operation-id <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--operation-id`` (string)


  The ID of the operation that you want to get more information about.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

Operation -> (structure)

  

  A complex type that contains information about the operation.

  

  Id -> (string)

    

    The ID of the operation that you want to get information about.

    

    

  Type -> (string)

    

    The name of the operation that is associated with the specified ID.

    

    

  Status -> (string)

    

    The status of the operation. Values include the following:

     

     
    * **SUBMITTED** : This is the initial state immediately after you submit a request. 
     
    * **PENDING** : Route 53 is performing the operation. 
     
    * **SUCCESS** : The operation succeeded. 
     
    * **FAIL** : The operation failed. For the failure reason, see ``ErrorMessage`` . 
     

    

    

  ErrorMessage -> (string)

    

    If the value of ``Status`` is ``FAIL`` , the reason that the operation failed.

    

    

  ErrorCode -> (string)

    

    The code associated with ``ErrorMessage`` . Values for ``ErrorCode`` include the following:

     

     
    * ``ACCESS_DENIED``   
     
    * ``CANNOT_CREATE_HOSTED_ZONE``   
     
    * ``EXPIRED_TOKEN``   
     
    * ``HOSTED_ZONE_NOT_FOUND``   
     
    * ``INTERNAL_FAILURE``   
     
    * ``INVALID_CHANGE_BATCH``   
     
    * ``THROTTLED_REQUEST``   
     

    

    

  CreateDate -> (timestamp)

    

    The date and time that the request was submitted, in Unix date/time format and Coordinated Universal Time (UTC). The value of ``CreateDate`` is accurate to milliseconds. For example, the value ``1516925490.087`` represents Friday, January 26, 2018 12:11:30.087 AM.

    

    

  UpdateDate -> (timestamp)

    

    The date and time that the value of ``Status`` changed to the current value, in Unix date/time format and Coordinated Universal Time (UTC). The value of ``UpdateDate`` is accurate to milliseconds. For example, the value ``1516925490.087`` represents Friday, January 26, 2018 12:11:30.087 AM.

    

    

  Targets -> (map)

    

    The name of the target entity that is associated with the operation:

     

     
    * **NAMESPACE** : The namespace ID is returned in the ``ResourceId`` property. 
     
    * **SERVICE** : The service ID is returned in the ``ResourceId`` property. 
     
    * **INSTANCE** : The instance ID is returned in the ``ResourceId`` property. 
     

    

    key -> (string)

      

      

    value -> (string)

      

      

    

  

