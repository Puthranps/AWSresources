[ :ref:`aws <cli:aws>` . :ref:`ec2 <cli:aws ec2>` ]

.. _cli:aws ec2 describe-fleets:


***************
describe-fleets
***************



===========
Description
===========



Describes one or more of your EC2 Fleet.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/ec2-2016-11-15/DescribeFleets>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-fleets
  [--dry-run | --no-dry-run]
  [--max-results <value>]
  [--next-token <value>]
  [--fleet-ids <value>]
  [--filters <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--dry-run`` | ``--no-dry-run`` (boolean)


  Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is ``DryRunOperation`` . Otherwise, it is ``UnauthorizedOperation`` .

  

``--max-results`` (integer)


  The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned ``NextToken`` value.

  

``--next-token`` (string)


  The token for the next set of results.

  

``--fleet-ids`` (list)


  The ID of the EC2 Fleets.

  



Syntax::

  "string" "string" ...



``--filters`` (list)


  One or more filters.

   

   
  * ``activity-status`` - The progress of the EC2 Fleet ( ``error`` | ``pending-fulfillment`` | ``pending-termination`` | ``fulfilled`` ). 
   
  * ``excess-capacity-termination-policy`` - Indicates whether to terminate running instances if the target capacity is decreased below the current EC2 Fleet size (``true`` | ``false`` ). 
   
  * ``fleet-state`` - The state of the EC2 Fleet (``submitted`` | ``active`` | ``deleted`` | ``failed`` | ``deleted-running`` | ``deleted-terminating`` | ``modifying`` ). 
   
  * ``replace-unhealthy-instances`` - Indicates whether EC2 Fleet should replace unhealthy instances (``true`` | ``false`` ). 
   
  * ``type`` - The type of request (``request`` | ``maintain`` ). 
   

  



Shorthand Syntax::

    Name=string,Values=string,string ...




JSON Syntax::

  [
    {
      "Name": "string",
      "Values": ["string", ...]
    }
    ...
  ]



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

NextToken -> (string)

  

  The token for the next set of results.

  

  

Fleets -> (list)

  

  Information about the EC2 Fleets.

  

  (structure)

    

    Describes an EC2 Fleet.

    

    ActivityStatus -> (string)

      

      The progress of the EC2 Fleet. If there is an error, the status is ``error`` . After all requests are placed, the status is ``pending_fulfillment`` . If the size of the EC2 Fleet is equal to or greater than its target capacity, the status is ``fulfilled`` . If the size of the EC2 Fleet is decreased, the status is ``pending_termination`` while instances are terminating.

      

      

    CreateTime -> (timestamp)

      

      The creation date and time of the EC2 Fleet.

      

      

    FleetId -> (string)

      

      The ID of the EC2 Fleet.

      

      

    FleetState -> (string)

      

      The state of the EC2 Fleet.

      

      

    ClientToken -> (string)

      

      Unique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see `Ensuring Idempotency <http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html>`__ .

       

      Constraints: Maximum 64 ASCII characters

      

      

    ExcessCapacityTerminationPolicy -> (string)

      

      Indicates whether running instances should be terminated if the target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.

      

      

    FulfilledCapacity -> (double)

      

      The number of units fulfilled by this request compared to the set target capacity.

      

      

    FulfilledOnDemandCapacity -> (double)

      

      The number of units fulfilled by this request compared to the set target On-Demand capacity.

      

      

    LaunchTemplateConfigs -> (list)

      

      The launch template and overrides.

      

      (structure)

        

        Describes a launch template and overrides.

        

        LaunchTemplateSpecification -> (structure)

          

          The launch template.

          

          LaunchTemplateId -> (string)

            

            The ID of the launch template. You must specify either a template ID or a template name.

            

            

          LaunchTemplateName -> (string)

            

            The name of the launch template. You must specify either a template name or a template ID.

            

            

          Version -> (string)

            

            The version number of the launch template. You must specify a version number.

            

            

          

        Overrides -> (list)

          

          Any parameters that you specify override the same parameters in the launch template.

          

          (structure)

            

            Describes overrides for a launch template.

            

            InstanceType -> (string)

              

              The instance type.

              

              

            MaxPrice -> (string)

              

              The maximum price per unit hour that you are willing to pay for a Spot Instance.

              

              

            SubnetId -> (string)

              

              The ID of the subnet in which to launch the instances.

              

              

            AvailabilityZone -> (string)

              

              The Availability Zone in which to launch the instances.

              

              

            WeightedCapacity -> (double)

              

              The number of units provided by the specified instance type.

              

              

            Priority -> (double)

              

              The priority for the launch template override. If **AllocationStrategy** is set to ``prioritized`` , EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. Valid values are whole numbers starting at ``0`` . The lower the number, the higher the priority. If no number is set, the override has the lowest priority.

              

              

            

          

        

      

    TargetCapacitySpecification -> (structure)

      

      The number of units to request. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is ``maintain`` , you can specify a target capacity of 0 and add capacity later.

      

      TotalTargetCapacity -> (integer)

        

        The number of units to request, filled using ``DefaultTargetCapacityType`` .

        

        

      OnDemandTargetCapacity -> (integer)

        

        The number of On-Demand units to request.

        

        

      SpotTargetCapacity -> (integer)

        

        The maximum number of Spot units to launch.

        

        

      DefaultTargetCapacityType -> (string)

        

        The default ``TotalTargetCapacity`` , which is either ``Spot`` or ``On-Demand`` .

        

        

      

    TerminateInstancesWithExpiration -> (boolean)

      

      Indicates whether running instances should be terminated when the EC2 Fleet expires. 

      

      

    Type -> (string)

      

      The type of request. Indicates whether the EC2 Fleet only ``requests`` the target capacity, or also attempts to ``maintain`` it. If you request a certain target capacity, EC2 Fleet only places the required requests; it does not attempt to replenish instances if capacity is diminished, and does not submit requests in alternative capacity pools if capacity is unavailable. To maintain a certain target capacity, EC2 Fleet places the required requests to meet this target capacity. It also automatically replenishes any interrupted Spot Instances. Default: ``maintain`` .

      

      

    ValidFrom -> (timestamp)

      

      The start date and time of the request, in UTC format (for example, *YYYY* -*MM* -*DD* T*HH* :*MM* :*SS* Z). The default is to start fulfilling the request immediately. 

      

      

    ValidUntil -> (timestamp)

      

      The end date and time of the request, in UTC format (for example, *YYYY* -*MM* -*DD* T*HH* :*MM* :*SS* Z). At this point, no new instance requests are placed or able to fulfill the request. The default end date is 7 days from the current date. 

      

      

    ReplaceUnhealthyInstances -> (boolean)

      

      Indicates whether EC2 Fleet should replace unhealthy instances.

      

      

    SpotOptions -> (structure)

      

      The configuration of Spot Instances in an EC2 Fleet.

      

      AllocationStrategy -> (string)

        

        Indicates how to allocate the target capacity across the Spot pools specified by the Spot Fleet request. The default is ``lowest-price`` .

        

        

      InstanceInterruptionBehavior -> (string)

        

        The behavior when a Spot Instance is interrupted. The default is ``terminate`` .

        

        

      InstancePoolsToUseCount -> (integer)

        

        The number of Spot pools across which to allocate your target Spot capacity. Valid only when **AllocationStrategy** is set to ``lowestPrice`` . EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.

        

        

      

    OnDemandOptions -> (structure)

      

      The allocation strategy of On-Demand Instances in an EC2 Fleet.

      

      AllocationStrategy -> (string)

        

        The order of the launch template overrides to use in fulfilling On-Demand capacity. If you specify ``lowest-price`` , EC2 Fleet uses price to determine the order, launching the lowest price first. If you specify ``prioritized`` , EC2 Fleet uses the priority that you assigned to each launch template override, launching the highest priority first. If you do not specify a value, EC2 Fleet defaults to ``lowest-price`` .

        

        

      

    Tags -> (list)

      

      The tags for an EC2 Fleet resource.

      

      (structure)

        

        Describes a tag.

        

        Key -> (string)

          

          The key of the tag.

           

          Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with ``aws:`` .

          

          

        Value -> (string)

          

          The value of the tag.

           

          Constraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.

          

          

        

      

    

  

