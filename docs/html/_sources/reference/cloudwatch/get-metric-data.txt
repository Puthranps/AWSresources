[ :ref:`aws <cli:aws>` . :ref:`cloudwatch <cli:aws cloudwatch>` ]

.. _cli:aws cloudwatch get-metric-data:


***************
get-metric-data
***************



===========
Description
===========



You can use the ``GetMetricData`` API to retrieve as many as 100 different metrics in a single request, with a total of as many as 100,800 datapoints. You can also optionally perform math expressions on the values of the returned statistics, to create new time series that represent new insights into your data. For example, using Lambda metrics, you could divide the Errors metric by the Invocations metric to get an error rate time series. For more information about metric math expressions, see `Metric Math Syntax and Functions <http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax>`__ in the *Amazon CloudWatch User Guide* .

 

Calls to the ``GetMetricData`` API have a different pricing structure than calls to ``GetMetricStatistics`` . For more information about pricing, see `Amazon CloudWatch Pricing <https://aws.amazon.com/cloudwatch/pricing/>`__ .

 

Amazon CloudWatch retains metric data as follows:

 

 
* Data points with a period of less than 60 seconds are available for 3 hours. These data points are high-resolution metrics and are available only for custom metrics that have been defined with a ``StorageResolution`` of 1. 
 
* Data points with a period of 60 seconds (1-minute) are available for 15 days. 
 
* Data points with a period of 300 seconds (5-minute) are available for 63 days. 
 
* Data points with a period of 3600 seconds (1 hour) are available for 455 days (15 months). 
 

 

Data points that are initially published with a shorter period are aggregated together for long-term storage. For example, if you collect data using a period of 1 minute, the data remains available for 15 days with 1-minute resolution. After 15 days, this data is still available, but is aggregated and retrievable only with a resolution of 5 minutes. After 63 days, the data is further aggregated and is available with a resolution of 1 hour.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/GetMetricData>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    get-metric-data
  --metric-data-queries <value>
  --start-time <value>
  --end-time <value>
  [--next-token <value>]
  [--scan-by <value>]
  [--max-datapoints <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--metric-data-queries`` (list)


  The metric queries to be returned. A single ``GetMetricData`` call can include as many as 100 ``MetricDataQuery`` structures. Each of these structures can specify either a metric to retrieve, or a math expression to perform on retrieved data. 

  



JSON Syntax::

  [
    {
      "Id": "string",
      "MetricStat": {
        "Metric": {
          "Namespace": "string",
          "MetricName": "string",
          "Dimensions": [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]
        },
        "Period": integer,
        "Stat": "string",
        "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
      },
      "Expression": "string",
      "Label": "string",
      "ReturnData": true|false
    }
    ...
  ]



``--start-time`` (timestamp)


  The time stamp indicating the earliest data to be returned.

   

  For better performance, specify ``StartTime`` and ``EndTime`` values that align with the value of the metric's ``Period`` and sync up with the beginning and end of an hour. For example, if the ``Period`` of a metric is 5 minutes, specifying 12:05 or 12:30 as ``StartTime`` can get a faster response from CloudWatch then setting 12:07 or 12:29 as the ``StartTime`` .

  

``--end-time`` (timestamp)


  The time stamp indicating the latest data to be returned.

   

  For better performance, specify ``StartTime`` and ``EndTime`` values that align with the value of the metric's ``Period`` and sync up with the beginning and end of an hour. For example, if the ``Period`` of a metric is 5 minutes, specifying 12:05 or 12:30 as ``EndTime`` can get a faster response from CloudWatch then setting 12:07 or 12:29 as the ``EndTime`` .

  

``--next-token`` (string)


  Include this value, if it was returned by the previous call, to get the next set of data points.

  

``--scan-by`` (string)


  The order in which data points should be returned. ``TimestampDescending`` returns the newest data first and paginates when the ``MaxDatapoints`` limit is reached. ``TimestampAscending`` returns the oldest data first and paginates when the ``MaxDatapoints`` limit is reached.

  

  Possible values:

  
  *   ``TimestampDescending``

  
  *   ``TimestampAscending``

  

  

``--max-datapoints`` (integer)


  The maximum number of data points the request should return before paginating. If you omit this, the default of 100,800 is used.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

MetricDataResults -> (list)

  

  The metrics that are returned, including the metric name, namespace, and dimensions.

  

  (structure)

    

    A ``GetMetricData`` call returns an array of ``MetricDataResult`` structures. Each of these structures includes the data points for that metric, along with the time stamps of those data points and other identifying information.

    

    Id -> (string)

      

      The short name you specified to represent this metric.

      

      

    Label -> (string)

      

      The human-readable label associated with the data.

      

      

    Timestamps -> (list)

      

      The time stamps for the data points, formatted in Unix timestamp format. The number of time stamps always matches the number of values and the value for Timestamps[x] is Values[x].

      

      (timestamp)

        

        

      

    Values -> (list)

      

      The data points for the metric corresponding to ``Timestamps`` . The number of values always matches the number of time stamps and the time stamp for Values[x] is Timestamps[x].

      

      (double)

        

        

      

    StatusCode -> (string)

      

      The status of the returned data. ``Complete`` indicates that all data points in the requested time range were returned. ``PartialData`` means that an incomplete set of data points were returned. You can use the ``NextToken`` value that was returned and repeat your request to get more data points. ``NextToken`` is not returned if you are performing a math expression. ``InternalError`` indicates that an error occurred. Retry your request using ``NextToken`` , if present.

      

      

    Messages -> (list)

      

      A list of messages with additional information about the data returned.

      

      (structure)

        

        A message returned by the ``GetMetricData`` API, including a code and a description.

        

        Code -> (string)

          

          The error code or status code associated with the message.

          

          

        Value -> (string)

          

          The message text.

          

          

        

      

    

  

NextToken -> (string)

  

  A token that marks the next batch of returned results.

  

  

