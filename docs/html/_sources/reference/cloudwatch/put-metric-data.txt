[ :ref:`aws <cli:aws>` . :ref:`cloudwatch <cli:aws cloudwatch>` ]

.. _cli:aws cloudwatch put-metric-data:


***************
put-metric-data
***************



===========
Description
===========



Publishes metric data to Amazon CloudWatch. CloudWatch associates the data with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to  ListMetrics .

 

You can publish either individual data points in the ``Value`` field, or arrays of values and the number of times each value occurred during the period by using the ``Values`` and ``Counts`` fields in the ``MetricDatum`` structure. Using the ``Values`` and ``Counts`` method enables you to publish up to 150 values per metric with one ``PutMetricData`` request, and supports retrieving percentile statistics on this data.

 

Each ``PutMetricData`` request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.

 

Although the ``Value`` parameter accepts numbers of type ``Double`` , CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.

 

You can use up to 10 dimensions per metric to further clarify what data the metric collects. For more information about specifying dimensions, see `Publishing Metrics <http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html>`__ in the *Amazon CloudWatch User Guide* .

 

Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for  GetMetricData or  GetMetricStatistics from the time they are submitted.

 

CloudWatch needs raw data points to calculate percentile statistics. These raw data points could be published individually or as part of ``Values`` and ``Counts`` arrays. If you publish data using statistic sets in the ``StatisticValues`` field instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:

 

 
* The ``SampleCount`` value of the statistic set is 1 and ``Min`` , ``Max`` , and ``Sum`` are all equal. 
 
* The ``Min`` and ``Max`` are equal, and ``Sum`` is equal to ``Min`` multiplied by ``SampleCount`` . 
 



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/monitoring-2010-08-01/PutMetricData>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    put-metric-data
  --namespace <value>
  [--metric-data <value>]
  [--metric-name <value>]
  [--timestamp <value>]
  [--unit <value>]
  [--value <value>]
  [--dimensions <value>]
  [--statistic-values <value>]
  [--storage-resolution <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--namespace`` (string)


  The namespace for the metric data.

   

  You cannot specify a namespace that begins with "AWS/". Namespaces that begin with "AWS/" are reserved for use by Amazon Web Services products.

  

``--metric-data`` (list)


  The data for the metric. The array can include no more than 20 metrics per call.

  



Shorthand Syntax::

    MetricName=string,Dimensions=[{Name=string,Value=string},{Name=string,Value=string}],Timestamp=timestamp,Value=double,StatisticValues={SampleCount=double,Sum=double,Minimum=double,Maximum=double},Values=double,double,Counts=double,double,Unit=string,StorageResolution=integer ...




JSON Syntax::

  [
    {
      "MetricName": "string",
      "Dimensions": [
        {
          "Name": "string",
          "Value": "string"
        }
        ...
      ],
      "Timestamp": timestamp,
      "Value": double,
      "StatisticValues": {
        "SampleCount": double,
        "Sum": double,
        "Minimum": double,
        "Maximum": double
      },
      "Values": [double, ...],
      "Counts": [double, ...],
      "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None",
      "StorageResolution": integer
    }
    ...
  ]



``--metric-name`` (string)
The name of the metric.

``--timestamp`` (string)
The time stamp used for the metric. If not specified, the default value is set to the time the metric data was received.

``--unit`` (string)
The unit of metric.

``--value`` (string)
The value for the metric. Although the --value parameter accepts numbers of type Double, Amazon CloudWatch truncates values with very large exponents. Values with base-10 exponents greater than 126 (1 x 10^126) are truncated. Likewise, values with base-10 exponents less than -130 (1 x 10^-130) are also truncated.

``--dimensions`` (string)
The --dimensions argument further expands on the identity of a metric using a Name=Value pair, separated by commas, for example: ``--dimensions InstanceID=1-23456789,InstanceType=m1.small`` . Note that the ``--dimensions`` argument has a different format when used in ``get-metric-data`` , where for the same example you would use the format ``--dimensions Name=InstanceID,Value=i-aaba32d4 Name=InstanceType,value=m1.small`` .

``--statistic-values`` (string)
A set of statistical values describing the metric.

``--storage-resolution`` (string)


  Valid values are 1 and 60. Setting this to 1 specifies this metric as a high-resolution metric, so that CloudWatch stores the metric with sub-minute resolution down to one second. Setting this to 60 specifies this metric as a regular-resolution metric, which CloudWatch stores at 1-minute resolution. Currently, high resolution is available only for custom metrics. For more information about high-resolution metrics, see `High-Resolution Metrics <http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html#high-resolution-metrics>`__ in the *Amazon CloudWatch User Guide* . 

   

  This field is optional, if you do not specify it the default of 60 is used.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To publish a custom metric to Amazon CloudWatch**

The following example uses the ``put-metric-data`` command to publish a custom metric to Amazon CloudWatch::

  aws cloudwatch put-metric-data --namespace "Usage Metrics" --metric-data file://metric.json

The values for the metric itself are stored in the JSON file, ``metric.json``.

Here are the contents of that file::

  [
    {
      "MetricName": "New Posts",
      "Timestamp": "Wednesday, June 12, 2013 8:28:20 PM",
      "Value": 0.50,
      "Unit": "Count"
    }
  ]

For more information, see `Publishing Custom Metrics`_ in the *Amazon CloudWatch Developer Guide*.

.. _`Publishing Custom Metrics`: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/publishingMetrics.html

**To specify multiple dimensions**

The following example illustrates how to specify multiple dimensions. Each dimension is specified as a Name=Value pair. Multiple dimensions are separated by a comma.::

  aws cloudwatch put-metric-data --metric-name Buffers --namespace MyNameSpace --unit Bytes --value 231434333 --dimensions InstanceID=1-23456789,InstanceType=m1.small


======
Output
======

None