[ :ref:`aws <cli:aws>` . :ref:`iotanalytics <cli:aws iotanalytics>` ]

.. _cli:aws iotanalytics run-pipeline-activity:


*********************
run-pipeline-activity
*********************



===========
Description
===========



Simulates the results of running a pipeline activity on a message payload.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/iotanalytics-2017-11-27/RunPipelineActivity>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    run-pipeline-activity
  --pipeline-activity <value>
  --payloads <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--pipeline-activity`` (structure)


  The pipeline activity that is run. This must not be a 'channel' activity or a 'datastore' activity because these activities are used in a pipeline only to load the original message and to store the (possibly) transformed message. If a 'lambda' activity is specified, only short-running Lambda functions (those with a timeout of less than 30 seconds or less) can be used.

  



Shorthand Syntax::

    channel={name=string,channelName=string,next=string},lambda={name=string,lambdaName=string,batchSize=integer,next=string},datastore={name=string,datastoreName=string},addAttributes={name=string,attributes={KeyName1=string,KeyName2=string},next=string},removeAttributes={name=string,attributes=[string,string],next=string},selectAttributes={name=string,attributes=[string,string],next=string},filter={name=string,filter=string,next=string},math={name=string,attribute=string,math=string,next=string},deviceRegistryEnrich={name=string,attribute=string,thingName=string,roleArn=string,next=string},deviceShadowEnrich={name=string,attribute=string,thingName=string,roleArn=string,next=string}




JSON Syntax::

  {
    "channel": {
      "name": "string",
      "channelName": "string",
      "next": "string"
    },
    "lambda": {
      "name": "string",
      "lambdaName": "string",
      "batchSize": integer,
      "next": "string"
    },
    "datastore": {
      "name": "string",
      "datastoreName": "string"
    },
    "addAttributes": {
      "name": "string",
      "attributes": {"string": "string"
        ...},
      "next": "string"
    },
    "removeAttributes": {
      "name": "string",
      "attributes": ["string", ...],
      "next": "string"
    },
    "selectAttributes": {
      "name": "string",
      "attributes": ["string", ...],
      "next": "string"
    },
    "filter": {
      "name": "string",
      "filter": "string",
      "next": "string"
    },
    "math": {
      "name": "string",
      "attribute": "string",
      "math": "string",
      "next": "string"
    },
    "deviceRegistryEnrich": {
      "name": "string",
      "attribute": "string",
      "thingName": "string",
      "roleArn": "string",
      "next": "string"
    },
    "deviceShadowEnrich": {
      "name": "string",
      "attribute": "string",
      "thingName": "string",
      "roleArn": "string",
      "next": "string"
    }
  }



``--payloads`` (list)


  The sample message payloads on which the pipeline activity is run.

  



Syntax::

  blob blob ...



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

payloads -> (list)

  

  The enriched or transformed sample message payloads as base64-encoded strings. (The results of running the pipeline activity on each input sample message payload, encoded in base64.)

  

  (blob)

    

    

  

logResult -> (string)

  

  In case the pipeline activity fails, the log message that is generated.

  

  

