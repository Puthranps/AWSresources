[ :ref:`aws <cli:aws>` . :ref:`ecr <cli:aws ecr>` ]

.. _cli:aws ecr start-lifecycle-policy-preview:


******************************
start-lifecycle-policy-preview
******************************



===========
Description
===========



Starts a preview of the specified lifecycle policy. This allows you to see the results before creating the lifecycle policy.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/ecr-2015-09-21/StartLifecyclePolicyPreview>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    start-lifecycle-policy-preview
  [--registry-id <value>]
  --repository-name <value>
  [--lifecycle-policy-text <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--registry-id`` (string)


  The AWS account ID associated with the registry that contains the repository. If you do not specify a registry, the default registry is assumed.

  

``--repository-name`` (string)


  The name of the repository to be evaluated.

  

``--lifecycle-policy-text`` (string)


  The policy to be evaluated against. If you do not specify a policy, the current policy for the repository is used.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To create a lifecycle policy preview**

This example creates a lifecycle policy preview defined by ``policy.json` for a repository called
``project-a/amazon-ecs-sample`` in the default registry for an account.

Command::

  aws ecr start-lifecycle-policy-preview --repository-name "project-a/amazon-ecs-sample" --lifecycle-policy-text "file://policy.json"

JSON file format::

   {
       "rules": [
           {
               "rulePriority": 1,
               "description": "Expire images older than 14 days",
               "selection": {
                   "tagStatus": "untagged",
                   "countType": "sinceImagePushed",
                   "countUnit": "days",
                   "countNumber": 14
               },
               "action": {
                   "type": "expire"
               }
           }
       ]
   }

Output::

   {
       "registryId": "<aws_account_id>",
       "repositoryName": "project-a/amazon-ecs-sample",
       "lifecyclePolicyText": "{\n    \"rules\": [\n        {\n            \"rulePriority\": 1,\n            \"description\": \"Expire images older than 14 days\",\n            \"selection\": {\n                \"tagStatus\": \"untagged\",\n                \"countType\": \"sinceImagePushed\",\n                \"countUnit\": \"days\",\n                \"countNumber\": 14\n            },\n            \"action\": {\n                \"type\": \"expire\"\n            }\n        }\n    ]\n}\n",
       "status": "IN_PROGRESS"
  }


======
Output
======

registryId -> (string)

  

  The registry ID associated with the request.

  

  

repositoryName -> (string)

  

  The repository name associated with the request.

  

  

lifecyclePolicyText -> (string)

  

  The JSON repository policy text.

  

  

status -> (string)

  

  The status of the lifecycle policy preview request.

  

  

