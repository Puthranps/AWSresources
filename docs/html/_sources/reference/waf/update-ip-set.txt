[ :ref:`aws <cli:aws>` . :ref:`waf <cli:aws waf>` ]

.. _cli:aws waf update-ip-set:


*************
update-ip-set
*************



===========
Description
===========



Inserts or deletes  IPSetDescriptor objects in an ``IPSet`` . For each ``IPSetDescriptor`` object, you specify the following values: 

 

 
* Whether to insert or delete the object from the array. If you want to change an ``IPSetDescriptor`` object, you delete the existing object and add a new one. 
 
* The IP address version, ``IPv4`` or ``IPv6`` .  
 
* The IP address in CIDR notation, for example, ``192.0.2.0/24`` (for the range of IP addresses from ``192.0.2.0`` to ``192.0.2.255`` ) or ``192.0.2.44/32`` (for the individual IP address ``192.0.2.44`` ).  
 

 

AWS WAF supports IPv4 address ranges: /8 and any range between /16 through /32. AWS WAF supports IPv6 address ranges: /16, /24, /32, /48, /56, /64, and /128. For more information about CIDR notation, see the Wikipedia entry `Classless Inter-Domain Routing <https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing>`__ .

 

IPv6 addresses can be represented using any of the following formats:

 

 
* 1111:0000:0000:0000:0000:0000:0000:0111/128 
 
* 1111:0:0:0:0:0:0:0111/128 
 
* 1111::0111/128 
 
* 1111::111/128 
 

 

You use an ``IPSet`` to specify which web requests you want to allow or block based on the IP addresses that the requests originated from. For example, if you're receiving a lot of requests from one or a small number of IP addresses and you want to block the requests, you can create an ``IPSet`` that specifies those IP addresses, and then configure AWS WAF to block the requests. 

 

To create and configure an ``IPSet`` , perform the following steps:

 

 
* Submit a  CreateIPSet request. 
 
* Use  GetChangeToken to get the change token that you provide in the ``ChangeToken`` parameter of an  UpdateIPSet request. 
 
* Submit an ``UpdateIPSet`` request to specify the IP addresses that you want AWS WAF to watch for. 
 

 

When you update an ``IPSet`` , you specify the IP addresses that you want to add and/or the IP addresses that you want to delete. If you want to change an IP address, you delete the existing IP address and add the new one.

 

You can insert a maximum of 1000 addresses in a single request.

 

For more information about how to use the AWS WAF API to allow or block HTTP requests, see the `AWS WAF Developer Guide <http://docs.aws.amazon.com/waf/latest/developerguide/>`__ .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/waf-2015-08-24/UpdateIPSet>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    update-ip-set
  --ip-set-id <value>
  --change-token <value>
  --updates <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--ip-set-id`` (string)


  The ``IPSetId`` of the  IPSet that you want to update. ``IPSetId`` is returned by  CreateIPSet and by  ListIPSets .

  

``--change-token`` (string)


  The value returned by the most recent call to  GetChangeToken .

  

``--updates`` (list)


  An array of ``IPSetUpdate`` objects that you want to insert into or delete from an  IPSet . For more information, see the applicable data types:

   

   
  *  IPSetUpdate : Contains ``Action`` and ``IPSetDescriptor``   
   
  *  IPSetDescriptor : Contains ``Type`` and ``Value``   
   

   

  You can insert a maximum of 1000 addresses in a single request.

  



Shorthand Syntax::

    Action=string,IPSetDescriptor={Type=string,Value=string} ...




JSON Syntax::

  [
    {
      "Action": "INSERT"|"DELETE",
      "IPSetDescriptor": {
        "Type": "IPV4"|"IPV6",
        "Value": "string"
      }
    }
    ...
  ]



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To update an IP set**

The following ``update-ip-set`` command updates an IPSet with an IPv4 address and deletes an IPv6 address::

 aws waf update-ip-set --ip-set-id a123fae4-b567-8e90-1234-5ab67ac8ca90 --change-token 12cs345-67cd-890b-1cd2-c3a4567d89f1 --updates Action="INSERT",IPSetDescriptor={Type="IPV4",Value="12.34.56.78/16"},Action="DELETE",IPSetDescriptor={Type="IPV6",Value="1111:0000:0000:0000:0000:0000:0000:0111/128"} 

Alternatively you can use a JSON file to specify the input. For example::

 aws waf update-ip-set --ip-set-id a123fae4-b567-8e90-1234-5ab67ac8ca90 --change-token 12cs345-67cd-890b-1cd2-c3a4567d89f1  --updates file://change.json 

Where content of the JSON file is:

[ 
{ 
"Action": "INSERT", 
"IPSetDescriptor":
{ 
"Type": "IPV4", 
"Value": "12.34.56.78/16" 
} 
}, 
{ 
"Action": "DELETE", 
"IPSetDescriptor": 
{ 
"Type": "IPV6", 
"Value": "1111:0000:0000:0000:0000:0000:0000:0111/128" 
} 
}
] 



For more information, see `Working with IP Match Conditions`_ in the *AWS WAF* developer guide.

.. _`Working with IP Match Conditions`: https://docs.aws.amazon.com/waf/latest/developerguide/web-acl-ip-conditions.html



======
Output
======

ChangeToken -> (string)

  

  The ``ChangeToken`` that you used to submit the ``UpdateIPSet`` request. You can also use this value to query the status of the request. For more information, see  GetChangeTokenStatus .

  

  

