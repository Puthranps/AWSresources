[ :ref:`aws <cli:aws>` . :ref:`ssm <cli:aws ssm>` ]

.. _cli:aws ssm put-parameter:


*************
put-parameter
*************



===========
Description
===========



Add a parameter to the system.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/ssm-2014-11-06/PutParameter>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    put-parameter
  --name <value>
  [--description <value>]
  --value <value>
  --type <value>
  [--key-id <value>]
  [--overwrite | --no-overwrite]
  [--allowed-pattern <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--name`` (string)


  The fully qualified name of the parameter that you want to add to the system. The fully qualified name includes the complete hierarchy of the parameter path and name. For example: ``/Dev/DBServer/MySQL/db-string13``  

   

  Naming Constraints:

   

   
  * Parameter names are case sensitive. 
   
  * A parameter name must be unique within an AWS Region 
   
  * A parameter name can't be prefixed with "aws" or "ssm" (case-insensitive). 
   
  * Parameter names can include only the following symbols and letters: ``a-zA-Z0-9_.-/``   
   
  * A parameter name can't include spaces. 
   
  * Parameter hierarchies are limited to a maximum depth of fifteen levels. 
   

   

  For additional information about valid values for parameter names, see `Requirements and Constraints for Parameter Names <http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-parameter-name-constraints.html>`__ in the *AWS Systems Manager User Guide* .

   

  .. note::

     

    The maximum length constraint listed below includes capacity for additional system attributes that are not part of the name. The maximum length for the fully qualified parameter name is 1011 characters. 

     

  

``--description`` (string)


  Information about the parameter that you want to add to the system. Optional but recommended.

   

  .. warning::

     

    Do not enter personally identifiable information in this field.

     

  

``--value`` (string)


  The parameter value that you want to add to the system.

  

``--type`` (string)


  The type of parameter that you want to add to the system.

   

  Items in a ``StringList`` must be separated by a comma (,). You can't use other punctuation or special character to escape items in the list. If you have a parameter value that requires a comma, then use the ``String`` data type.

   

  .. note::

     

     ``SecureString`` is not currently supported for AWS CloudFormation templates or in the China Regions.

     

  

  Possible values:

  
  *   ``String``

  
  *   ``StringList``

  
  *   ``SecureString``

  

  

``--key-id`` (string)


  The KMS Key ID that you want to use to encrypt a parameter. Either the default AWS Key Management Service (AWS KMS) key automatically assigned to your AWS account or a custom key. Required for parameters that use the ``SecureString`` data type.

   

  If you don't specify a key ID, the system uses the default key associated with your AWS account.

   

   
  * To use your default AWS KMS key, choose the ``SecureString`` data type, and do *not* specify the ``Key ID`` when you create the parameter. The system automatically populates ``Key ID`` with your default KMS key. 
   
  * To use a custom KMS key, choose the ``SecureString`` data type with the ``Key ID`` parameter. 
   

  

``--overwrite`` | ``--no-overwrite`` (boolean)


  Overwrite an existing parameter. If not specified, will default to "false".

  

``--allowed-pattern`` (string)


  A regular expression used to validate the parameter value. For example, for String types with values restricted to numbers, you can specify the following: AllowedPattern=^\d+$ 

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To create a parameter that uses a String data type**

This example creates a parameter. There is no output if the command succeeds.

Command::

  aws ssm put-parameter --name "welcome" --type "String" --value "helloWorld"

**To create a Secure String parameter**

This example creates a Secure String parameter. Singles quotes are used so that the literal value is passed. There is no output if the command succeeds.

Command::

  aws ssm put-parameter --name 'password' --type "SecureString" --value 'a value, for example P@ssW%rd#1'

**To change a parameter value**

This example changes the value of a parameter. There is no output if the command succeeds.

Command::

  aws ssm put-parameter --name "welcome" --type "String" --value "good day sunshine" --overwrite
  


======
Output
======

Version -> (long)

  

  The new version number of a parameter. If you edit a parameter value, Parameter Store automatically creates a new version and assigns this new version a unique ID. You can reference a parameter version ID in API actions or in Systems Manager documents (SSM documents). By default, if you don't specify a specific version, the system returns the latest parameter value when a parameter is called.

  

  

