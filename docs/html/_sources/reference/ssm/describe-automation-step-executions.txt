[ :ref:`aws <cli:aws>` . :ref:`ssm <cli:aws ssm>` ]

.. _cli:aws ssm describe-automation-step-executions:


***********************************
describe-automation-step-executions
***********************************



===========
Description
===========



Information about all active and terminated step executions in an Automation workflow.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/ssm-2014-11-06/DescribeAutomationStepExecutions>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-automation-step-executions
  --automation-execution-id <value>
  [--filters <value>]
  [--next-token <value>]
  [--max-results <value>]
  [--reverse-order | --no-reverse-order]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--automation-execution-id`` (string)


  The Automation execution ID for which you want step execution descriptions.

  

``--filters`` (list)


  One or more filters to limit the number of step executions returned by the request.

  



Shorthand Syntax::

    Key=string,Values=string,string ...




JSON Syntax::

  [
    {
      "Key": "StartTimeBefore"|"StartTimeAfter"|"StepExecutionStatus"|"StepExecutionId"|"StepName"|"Action",
      "Values": ["string", ...]
    }
    ...
  ]



``--next-token`` (string)


  The token for the next set of items to return. (You received this token from a previous call.)

  

``--max-results`` (integer)


  The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.

  

``--reverse-order`` | ``--no-reverse-order`` (boolean)


  A boolean that indicates whether to list step executions in reverse order by start time. The default value is false.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

StepExecutions -> (list)

  

  A list of details about the current state of all steps that make up an execution.

  

  (structure)

    

    Detailed information about an the execution state of an Automation step.

    

    StepName -> (string)

      

      The name of this execution step.

      

      

    Action -> (string)

      

      The action this step performs. The action determines the behavior of the step.

      

      

    TimeoutSeconds -> (long)

      

      The timeout seconds of the step.

      

      

    OnFailure -> (string)

      

      The action to take if the step fails. The default value is Abort.

      

      

    MaxAttempts -> (integer)

      

      The maximum number of tries to run the action of the step. The default value is 1.

      

      

    ExecutionStartTime -> (timestamp)

      

      If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field is not populated.

      

      

    ExecutionEndTime -> (timestamp)

      

      If a step has finished execution, this contains the time the execution ended. If the step has not yet concluded, this field is not populated.

      

      

    StepStatus -> (string)

      

      The execution status for this step. Valid values include: Pending, InProgress, Success, Cancelled, Failed, and TimedOut.

      

      

    ResponseCode -> (string)

      

      The response code returned by the execution of the step.

      

      

    Inputs -> (map)

      

      Fully-resolved values passed into the step before execution.

      

      key -> (string)

        

        

      value -> (string)

        

        

      

    Outputs -> (map)

      

      Returned values from the execution of the step.

      

      key -> (string)

        

        

      value -> (list)

        

        (string)

          

          

        

      

    Response -> (string)

      

      A message associated with the response code for an execution.

      

      

    FailureMessage -> (string)

      

      If a step failed, this message explains why the execution failed.

      

      

    FailureDetails -> (structure)

      

      Information about the Automation failure.

      

      FailureStage -> (string)

        

        The stage of the Automation execution when the failure occurred. The stages include the following: InputValidation, PreVerification, Invocation, PostVerification.

        

        

      FailureType -> (string)

        

        The type of Automation failure. Failure types include the following: Action, Permission, Throttling, Verification, Internal.

        

        

      Details -> (map)

        

        Detailed information about the Automation step failure.

        

        key -> (string)

          

          

        value -> (list)

          

          (string)

            

            

          

        

      

    StepExecutionId -> (string)

      

      The unique ID of a step execution.

      

      

    OverriddenParameters -> (map)

      

      A user-specified list of parameters to override when executing a step.

      

      key -> (string)

        

        

      value -> (list)

        

        (string)

          

          

        

      

    IsEnd -> (boolean)

      

      The flag which can be used to end automation no matter whether the step succeeds or fails.

      

      

    NextStep -> (string)

      

      The next step after the step succeeds.

      

      

    IsCritical -> (boolean)

      

      The flag which can be used to help decide whether the failure of current step leads to the Automation failure.

      

      

    ValidNextSteps -> (list)

      

      Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to execute the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.

      

      (string)

        

        

      

    

  

NextToken -> (string)

  

  The token to use when requesting the next set of items. If there are no additional items to return, the string is empty.

  

  

