[ :ref:`aws <cli:aws>` . :ref:`elbv2 <cli:aws elbv2>` ]

.. _cli:aws elbv2 create-target-group:


*******************
create-target-group
*******************



===========
Description
===========



Creates a target group.

 

To register targets with the target group, use  RegisterTargets . To update the health check settings for the target group, use  ModifyTargetGroup . To monitor the health of targets in the target group, use  DescribeTargetHealth .

 

To route traffic to the targets in a target group, specify the target group in an action using  CreateListener or  CreateRule .

 

To delete a target group, use  DeleteTargetGroup .

 

This operation is idempotent, which means that it completes at most one time. If you attempt to create multiple target groups with the same settings, each call succeeds.

 

For more information, see `Target Groups for Your Application Load Balancers <http://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html>`__ in the *Application Load Balancers Guide* or `Target Groups for Your Network Load Balancers <http://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html>`__ in the *Network Load Balancers Guide* .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/elasticloadbalancingv2-2015-12-01/CreateTargetGroup>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-target-group
  --name <value>
  --protocol <value>
  --port <value>
  --vpc-id <value>
  [--health-check-protocol <value>]
  [--health-check-port <value>]
  [--health-check-path <value>]
  [--health-check-interval-seconds <value>]
  [--health-check-timeout-seconds <value>]
  [--healthy-threshold-count <value>]
  [--unhealthy-threshold-count <value>]
  [--matcher <value>]
  [--target-type <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--name`` (string)


  The name of the target group.

   

  This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.

  

``--protocol`` (string)


  The protocol to use for routing traffic to the targets. For Application Load Balancers, the supported protocols are HTTP and HTTPS. For Network Load Balancers, the supported protocol is TCP.

  

  Possible values:

  
  *   ``HTTP``

  
  *   ``HTTPS``

  
  *   ``TCP``

  

  

``--port`` (integer)


  The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target.

  

``--vpc-id`` (string)


  The identifier of the virtual private cloud (VPC).

  

``--health-check-protocol`` (string)


  The protocol the load balancer uses when performing health checks on targets. The TCP protocol is supported only if the protocol of the target group is TCP. For Application Load Balancers, the default is HTTP. For Network Load Balancers, the default is TCP.

  

  Possible values:

  
  *   ``HTTP``

  
  *   ``HTTPS``

  
  *   ``TCP``

  

  

``--health-check-port`` (string)


  The port the load balancer uses when performing health checks on targets. The default is ``traffic-port`` , which is the port on which each target receives traffic from the load balancer.

  

``--health-check-path`` (string)


  [HTTP/HTTPS health checks] The ping path that is the destination on the targets for health checks. The default is /.

  

``--health-check-interval-seconds`` (integer)


  The approximate amount of time, in seconds, between health checks of an individual target. For Application Load Balancers, the range is 5–300 seconds. For Network Load Balancers, the supported values are 10 or 30 seconds. The default is 30 seconds.

  

``--health-check-timeout-seconds`` (integer)


  The amount of time, in seconds, during which no response from a target means a failed health check. For Application Load Balancers, the range is 2–60 seconds and the default is 5 seconds. For Network Load Balancers, this is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.

  

``--healthy-threshold-count`` (integer)


  The number of consecutive health checks successes required before considering an unhealthy target healthy. For Application Load Balancers, the default is 5. For Network Load Balancers, the default is 3.

  

``--unhealthy-threshold-count`` (integer)


  The number of consecutive health check failures required before considering a target unhealthy. For Application Load Balancers, the default is 2. For Network Load Balancers, this value must be the same as the healthy threshold count.

  

``--matcher`` (structure)


  [HTTP/HTTPS health checks] The HTTP codes to use when checking for a successful response from a target.

  



Shorthand Syntax::

    HttpCode=string




JSON Syntax::

  {
    "HttpCode": "string"
  }



``--target-type`` (string)


  The type of target that you must specify when registering targets with this target group. The possible values are ``instance`` (targets are specified by instance ID) or ``ip`` (targets are specified by IP address). The default is ``instance`` . You can't specify targets for a target group using both instance IDs and IP addresses.

   

  If the target type is ``ip`` , specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.

  

  Possible values:

  
  *   ``instance``

  
  *   ``ip``

  

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To create a target group for an Application Load Balancer**

This example creates a target group that you can use to route traffic to targets using HTTP on port 80. This target group uses the default health check configuration for an HTTP or HTTPS target group.

Command::

  aws elbv2 create-target-group --name my-targets --protocol HTTP --port 80 --vpc-id vpc-3ac0fb5f

Output::

  {
    "TargetGroups": [
        {
            "TargetGroupName": "my-targets",
            "Protocol": "HTTP",
            "Port": 80,
            "VpcId": "vpc-3ac0fb5f",
            "TargetType": "instance",
            "HealthyThresholdCount": 5,
            "Matcher": {
                "HttpCode": "200"
            },
            "UnhealthyThresholdCount": 2,
            "HealthCheckPath": "/",
            "HealthCheckProtocol": "HTTP",
            "HealthCheckPort": "traffic-port",
            "HealthCheckIntervalSeconds": 30,
            "HealthCheckTimeoutSeconds": 5,
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067"
        }
    ]
  }

By default, targets are registered by instance ID. To register targets by IP address, create a target group with a target type of ``ip``.

Command::

  aws elbv2 create-target-group --name my-ip-targets --protocol HTTP --port 80 --target-type ip --vpc-id vpc-3ac0fb5f

**To create a target group for a Network Load Balancer**

This example creates a target group that you can use to route traffic to targets using TCP on port 80. This target group uses the default health check configuration for a TCP target group.

Command::

  aws elbv2 create-target-group --name my-tcp-targets --protocol TCP --port 80 --vpc-id vpc-3ac0fb5f

Output::

  {
    "TargetGroups": [
        {
            "TargetGroupName": "my-tcp-targets",
            "Protocol": "TCP",
            "Port": 80,
            "VpcId": "vpc-3ac0fb5f",
            "TargetType": "instance",
            "HealthyThresholdCount": 3,
            "Matcher": {},
            "UnhealthyThresholdCount": 3,
            "HealthCheckProtocol": "TCP",
            "HealthCheckPort": "traffic-port",
            "HealthCheckIntervalSeconds": 30,
            "HealthCheckTimeoutSeconds": 10,
            "TargetGroupArn": "arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-tcp-targets/b6bba954d1361c78"
        }
    ]
  }

By default, targets are registered by instance ID. To register targets by IP address, create a target group with a target type of ``ip``.

Command::

  aws elbv2 create-target-group --name my-tcp-ip-targets --protocol TCP --port 80 --target-type ip --vpc-id vpc-3ac0fb5f


======
Output
======

TargetGroups -> (list)

  

  Information about the target group.

  

  (structure)

    

    Information about a target group.

    

    TargetGroupArn -> (string)

      

      The Amazon Resource Name (ARN) of the target group.

      

      

    TargetGroupName -> (string)

      

      The name of the target group.

      

      

    Protocol -> (string)

      

      The protocol to use for routing traffic to the targets.

      

      

    Port -> (integer)

      

      The port on which the targets are listening.

      

      

    VpcId -> (string)

      

      The ID of the VPC for the targets.

      

      

    HealthCheckProtocol -> (string)

      

      The protocol to use to connect with the target.

      

      

    HealthCheckPort -> (string)

      

      The port to use to connect with the target.

      

      

    HealthCheckIntervalSeconds -> (integer)

      

      The approximate amount of time, in seconds, between health checks of an individual target.

      

      

    HealthCheckTimeoutSeconds -> (integer)

      

      The amount of time, in seconds, during which no response means a failed health check.

      

      

    HealthyThresholdCount -> (integer)

      

      The number of consecutive health checks successes required before considering an unhealthy target healthy.

      

      

    UnhealthyThresholdCount -> (integer)

      

      The number of consecutive health check failures required before considering the target unhealthy.

      

      

    HealthCheckPath -> (string)

      

      The destination for the health check request.

      

      

    Matcher -> (structure)

      

      The HTTP codes to use when checking for a successful response from a target.

      

      HttpCode -> (string)

        

        The HTTP codes.

         

        For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").

         

        For Network Load Balancers, this is 200–399.

        

        

      

    LoadBalancerArns -> (list)

      

      The Amazon Resource Names (ARN) of the load balancers that route traffic to this target group.

      

      (string)

        

        

      

    TargetType -> (string)

      

      The type of target that you must specify when registering targets with this target group. The possible values are ``instance`` (targets are specified by instance ID) or ``ip`` (targets are specified by IP address).

      

      

    

  

