[ :ref:`aws <cli:aws>` . :ref:`waf-regional <cli:aws waf-regional>` ]

.. _cli:aws waf-regional put-logging-configuration:


*************************
put-logging-configuration
*************************



===========
Description
===========



Associates a  LoggingConfiguration with a specified web ACL.

 

You can access information about all traffic that AWS WAF inspects using the following steps:

 

 
* Create an Amazon Kinesis Data Firehose delivery stream. For more information, see `Creating an Amazon Kinesis Data Firehose Delivery Stream <https://docs.aws.amazon.com/firehose/latest/dev/what-is-this-service.html>`__ .  
 
* Associate that delivery stream to your web ACL using a ``PutLoggingConfiguration`` request. 
 

 

When you successfully enable logging using a ``PutLoggingConfiguration`` request, AWS WAF will create a service linked role with the necessary permissions to write logs to the Amazon Kinesis Data Firehose delivery stream. For more information, see `Logging Web ACL Traffic Information <http://docs.aws.amazon.com/waf/latest/developerguide/logging.html>`__ in the *AWS WAF Developer Guide* .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/waf-regional-2016-11-28/PutLoggingConfiguration>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    put-logging-configuration
  --logging-configuration <value>
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--logging-configuration`` (structure)


  The Amazon Kinesis Data Firehose delivery streams that contains the inspected traffic information, the redacted fields details, and the Amazon Resource Name (ARN) of the web ACL to monitor.

  



Shorthand Syntax::

    ResourceArn=string,LogDestinationConfigs=string,string,RedactedFields=[{Type=string,Data=string},{Type=string,Data=string}]




JSON Syntax::

  {
    "ResourceArn": "string",
    "LogDestinationConfigs": ["string", ...],
    "RedactedFields": [
      {
        "Type": "URI"|"QUERY_STRING"|"HEADER"|"METHOD"|"BODY"|"SINGLE_QUERY_ARG"|"ALL_QUERY_ARGS",
        "Data": "string"
      }
      ...
    ]
  }



``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

LoggingConfiguration -> (structure)

  

  The  LoggingConfiguration that you submitted in the request.

  

  ResourceArn -> (string)

    

    The Amazon Resource Name (ARN) of the web ACL that you want to associate with ``LogDestinationConfigs`` .

    

    

  LogDestinationConfigs -> (list)

    

    An array of Amazon Kinesis Data Firehose delivery stream ARNs.

    

    (string)

      

      

    

  RedactedFields -> (list)

    

    The parts of the request that you want redacted from the logs. For example, if you redact the cookie field, the cookie field in the delivery stream will be ``xxx`` . 

    

    (structure)

      

      Specifies where in a web request to look for ``TargetString`` .

      

      Type -> (string)

        

        The part of the web request that you want AWS WAF to search for a specified string. Parts of a request that you can search include the following:

         

         
        * ``HEADER`` : A specified request header, for example, the value of the ``User-Agent`` or ``Referer`` header. If you choose ``HEADER`` for the type, specify the name of the header in ``Data`` . 
         
        * ``METHOD`` : The HTTP method, which indicated the type of operation that the request is asking the origin to perform. Amazon CloudFront supports the following methods: ``DELETE`` , ``GET`` , ``HEAD`` , ``OPTIONS`` , ``PATCH`` , ``POST`` , and ``PUT`` . 
         
        * ``QUERY_STRING`` : A query string, which is the part of a URL that appears after a ``?`` character, if any. 
         
        * ``URI`` : The part of a web request that identifies a resource, for example, ``/images/daily-ad.jpg`` . 
         
        * ``BODY`` : The part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form. The request body immediately follows the request headers. Note that only the first ``8192`` bytes of the request body are forwarded to AWS WAF for inspection. To allow or block requests based on the length of the body, you can create a size constraint set. For more information, see  CreateSizeConstraintSet .  
         
        * ``SINGLE_QUERY_ARG`` : The parameter in the query string that you will inspect, such as *UserName* or *SalesRegion* . The maximum length for ``SINGLE_QUERY_ARG`` is 30 characters. 
         
        * ``ALL_QUERY_ARGS`` : Similar to ``SINGLE_QUERY_ARG`` , but rather than inspecting a single parameter, AWS WAF will inspect all parameters within the query for the value or regex pattern that you specify in ``TargetString`` . 
         

        

        

      Data -> (string)

        

        When the value of ``Type`` is ``HEADER`` , enter the name of the header that you want AWS WAF to search, for example, ``User-Agent`` or ``Referer`` . The name of the header is not case sensitive.

         

        When the value of ``Type`` is ``SINGLE_QUERY_ARG`` , enter the name of the parameter that you want AWS WAF to search, for example, ``UserName`` or ``SalesRegion`` . The parameter name is not case sensitive.

         

        If the value of ``Type`` is any other value, omit ``Data`` .

        

        

      

    

  

