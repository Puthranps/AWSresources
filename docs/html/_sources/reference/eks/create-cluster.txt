[ :ref:`aws <cli:aws>` . :ref:`eks <cli:aws eks>` ]

.. _cli:aws eks create-cluster:


**************
create-cluster
**************



===========
Description
===========



Creates an Amazon EKS control plane. 

 

The Amazon EKS control plane consists of control plane instances that run the Kubernetes software, like ``etcd`` and the API server. The control plane runs in an account managed by AWS, and the Kubernetes API is exposed via the Amazon EKS API server endpoint.

 

Amazon EKS worker nodes run in your AWS account and connect to your cluster's control plane via the Kubernetes API server endpoint and a certificate file that is created for your cluster.

 

The cluster control plane is provisioned across multiple Availability Zones and fronted by an Elastic Load Balancing Network Load Balancer. Amazon EKS also provisions elastic network interfaces in your VPC subnets to provide connectivity from the control plane instances to the worker nodes (for example, to support ``kubectl exec`` , ``logs`` , and ``proxy`` data flows).

 

After you create an Amazon EKS cluster, you must configure your Kubernetes tooling to communicate with the API server and launch worker nodes into your cluster. For more information, see `Managing Cluster Authentication <http://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html>`__ and `Launching Amazon EKS Worker Nodes <http://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html>`__ in the *Amazon EKS User Guide* .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/eks-2017-11-01/CreateCluster>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    create-cluster
  --name <value>
  --role-arn <value>
  --resources-vpc-config <value>
  [--client-request-token <value>]
  [--kubernetes-version <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--name`` (string)


  The unique name to give to your cluster.

  

``--role-arn`` (string)


  The Amazon Resource Name (ARN) of the IAM role that provides permissions for Amazon EKS to make calls to other AWS API operations on your behalf. For more information, see `Amazon EKS Service IAM Role <http://docs.aws.amazon.com/eks/latest/userguide/service_IAM_role.html>`__ in the * *Amazon EKS User Guide* * .

  

``--resources-vpc-config`` (structure)


  The VPC subnets and security groups used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <http://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <http://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* . You must specify at least two subnets. You may specify up to 5 security groups, but we recommend that you use a dedicated security group for your cluster control plane.

  



Shorthand Syntax::

    subnetIds=string,string,securityGroupIds=string,string




JSON Syntax::

  {
    "subnetIds": ["string", ...],
    "securityGroupIds": ["string", ...]
  }



``--client-request-token`` (string)


  Unique, case-sensitive identifier you provide to ensure the idempotency of the request.

  

``--kubernetes-version`` (string)


  The desired Kubernetes version for your cluster. If you do not specify a value here, the latest version available in Amazon EKS is used.

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Examples
========

**To create a new cluster**

This example command creates a cluster named `prod` in your default region.

Command::

  aws eks create-cluster --name prod --role-arn arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI --resources-vpc-config subnetIds=subnet-6782e71e,subnet-e7e761ac,securityGroupIds=sg-6979fe18

Output::

    {
        "cluster": {
            "name": "prod",
            "arn": "arn:aws:eks:us-west-2:012345678910:cluster/prod",
            "createdAt": 1527808069.147,
            "version": "1.10",
            "roleArn": "arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-J7ONKE3BQ4PI",
            "resourcesVpcConfig": {
                "subnetIds": [
                    "subnet-6782e71e",
                    "subnet-e7e761ac"
                ],
                "securityGroupIds": [
                    "sg-6979fe18"
                ],
                "vpcId": "vpc-950809ec"
            },
            "status": "CREATING",
            "certificateAuthority": {}
        }
    }


======
Output
======

cluster -> (structure)

  

  The full description of your new cluster.

  

  name -> (string)

    

    The name of the cluster.

    

    

  arn -> (string)

    

    The Amazon Resource Name (ARN) of the cluster.

    

    

  createdAt -> (timestamp)

    

    The Unix epoch time stamp in seconds for when the cluster was created.

    

    

  version -> (string)

    

    The Kubernetes server version for the cluster.

    

    

  endpoint -> (string)

    

    The endpoint for your Kubernetes API server.

    

    

  roleArn -> (string)

    

    The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.

    

    

  resourcesVpcConfig -> (structure)

    

    The VPC subnets and security groups used by the cluster control plane. Amazon EKS VPC resources have specific requirements to work properly with Kubernetes. For more information, see `Cluster VPC Considerations <http://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html>`__ and `Cluster Security Group Considerations <http://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html>`__ in the *Amazon EKS User Guide* .

    

    subnetIds -> (list)

      

      The subnets associated with your cluster.

      

      (string)

        

        

      

    securityGroupIds -> (list)

      

      The security groups associated with the cross-account elastic network interfaces that are used to allow communication between your worker nodes and the Kubernetes control plane.

      

      (string)

        

        

      

    vpcId -> (string)

      

      The VPC associated with your cluster.

      

      

    

  status -> (string)

    

    The current status of the cluster.

    

    

  certificateAuthority -> (structure)

    

    The ``certificate-authority-data`` for your cluster.

    

    data -> (string)

      

      The base64 encoded certificate data required to communicate with your cluster. Add this to the ``certificate-authority-data`` section of the ``kubeconfig`` file for your cluster.

      

      

    

  clientRequestToken -> (string)

    

    Unique, case-sensitive identifier you provide to ensure the idempotency of the request.

    

    

  platformVersion -> (string)

    

    The platform version of your Amazon EKS cluster. For more information, see `Platform Versions <eks/latest/userguide/platform-versions.html>`__ in the * *Amazon EKS User Guide* * .

    

    

  

