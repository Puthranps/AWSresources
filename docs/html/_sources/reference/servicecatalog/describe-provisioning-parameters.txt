[ :ref:`aws <cli:aws>` . :ref:`servicecatalog <cli:aws servicecatalog>` ]

.. _cli:aws servicecatalog describe-provisioning-parameters:


********************************
describe-provisioning-parameters
********************************



===========
Description
===========



Gets information about the configuration required to provision the specified product using the specified provisioning artifact.

 

If the output contains a TagOption key with an empty list of values, there is a TagOption conflict for that key. The end user cannot take action to fix the conflict, and launch is not blocked. In subsequent calls to  ProvisionProduct , do not include conflicted TagOption keys as tags, or this causes the error "Parameter validation failed: Missing required parameter in Tags[*N* ]:*Value* ". Tag the provisioned product with the value ``sc-tagoption-conflict-portfolioId-productId`` .



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/servicecatalog-2015-12-10/DescribeProvisioningParameters>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    describe-provisioning-parameters
  [--accept-language <value>]
  --product-id <value>
  --provisioning-artifact-id <value>
  [--path-id <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--accept-language`` (string)


  The language code.

   

   
  * ``en`` - English (default) 
   
  * ``jp`` - Japanese 
   
  * ``zh`` - Chinese 
   

  

``--product-id`` (string)


  The product identifier.

  

``--provisioning-artifact-id`` (string)


  The identifier of the provisioning artifact.

  

``--path-id`` (string)


  The path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use  ListLaunchPaths .

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

ProvisioningArtifactParameters -> (list)

  

  Information about the parameters used to provision the product.

  

  (structure)

    

    Information about a parameter used to provision a product.

    

    ParameterKey -> (string)

      

      The parameter key.

      

      

    DefaultValue -> (string)

      

      The default value.

      

      

    ParameterType -> (string)

      

      The parameter type.

      

      

    IsNoEcho -> (boolean)

      

      If this value is true, the value for this parameter is obfuscated from view when the parameter is retrieved. This parameter is used to hide sensitive information.

      

      

    Description -> (string)

      

      The description of the parameter.

      

      

    ParameterConstraints -> (structure)

      

      Constraints that the administrator has put on a parameter.

      

      AllowedValues -> (list)

        

        The values that the administrator has allowed for the parameter.

        

        (string)

          

          

        

      

    

  

ConstraintSummaries -> (list)

  

  Information about the constraints used to provision the product.

  

  (structure)

    

    Summary information about a constraint.

    

    Type -> (string)

      

      The type of constraint.

       

       
      * ``LAUNCH``   
       
      * ``NOTIFICATION``   
       
      * ``TEMPLATE``   
       

      

      

    Description -> (string)

      

      The description of the constraint.

      

      

    

  

UsageInstructions -> (list)

  

  Any additional metadata specifically related to the provisioning of the product. For example, see the ``Version`` field of the CloudFormation template.

  

  (structure)

    

    Additional information provided by the administrator.

    

    Type -> (string)

      

      The usage instruction type for the value.

      

      

    Value -> (string)

      

      The usage instruction value for this type.

      

      

    

  

TagOptions -> (list)

  

  Information about the TagOptions associated with the resource.

  

  (structure)

    

    Summary information about a TagOption.

    

    Key -> (string)

      

      The TagOption key.

      

      

    Values -> (list)

      

      The TagOption value.

      

      (string)

        

        

      

    

  

