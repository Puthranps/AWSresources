[ :ref:`aws <cli:aws>` . :ref:`lambda <cli:aws lambda>` ]

.. _cli:aws lambda add-permission:


**************
add-permission
**************



===========
Description
===========



Adds a permission to the resource policy associated with the specified AWS Lambda function. You use resource policies to grant permissions to event sources that use the *push* model. In a *push* model, event sources (such as Amazon S3 and custom applications) invoke your Lambda function. Each permission you add to the resource policy allows an event source permission to invoke the Lambda function. 

 

Permissions apply to the Amazon Resource Name (ARN) used to invoke the function, which can be unqualified (the unpublished version of the function), or include a version or alias. If a client uses a version or alias to invoke a function, use the ``Qualifier`` parameter to apply permissions to that ARN. For more information about versioning, see `AWS Lambda Function Versioning and Aliases <http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html>`__ . 

 

This operation requires permission for the ``lambda:AddPermission`` action.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/lambda-2015-03-31/AddPermission>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    add-permission
  --function-name <value>
  --statement-id <value>
  --action <value>
  --principal <value>
  [--source-arn <value>]
  [--source-account <value>]
  [--event-source-token <value>]
  [--qualifier <value>]
  [--revision-id <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--function-name`` (string)


  The name of the lambda function.

   

   **Name formats**  

   

   
  * **Function name** - ``MyFunction`` . 
   
  * **Function ARN** - ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction`` . 
   
  * **Partial ARN** - ``123456789012:function:MyFunction`` . 
   

   

  The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.

  

``--statement-id`` (string)


  A unique statement identifier.

  

``--action`` (string)


  The AWS Lambda action you want to allow in this statement. Each Lambda action is a string starting with ``lambda:`` followed by the API name . For example, ``lambda:CreateFunction`` . You can use wildcard (``lambda:*`` ) to grant permission for all AWS Lambda actions. 

  

``--principal`` (string)


  The principal who is getting this permission. The principal can be an AWS service (e.g. ``s3.amazonaws.com`` or ``sns.amazonaws.com`` ) for service triggers, or an account ID for cross-account access. If you specify a service as a principal, use the ``SourceArn`` parameter to limit who can invoke the function through that service.

  

``--source-arn`` (string)


  The Amazon Resource Name of the invoker. 

   

  .. warning::

     

    If you add a permission to a service principal without providing the source ARN, any AWS account that creates a mapping to your function ARN can invoke your Lambda function.

     

  

``--source-account`` (string)


  This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner. For example, if the ``SourceArn`` identifies a bucket, then this is the bucket owner's account ID. You can use this additional condition to ensure the bucket you specify is owned by a specific account (it is possible the bucket owner deleted the bucket and some other AWS account created the bucket). You can also use this condition to specify all sources (that is, you don't specify the ``SourceArn`` ) owned by a specific account. 

  

``--event-source-token`` (string)


  A unique token that must be supplied by the principal invoking the function. This is currently only used for Alexa Smart Home functions.

  

``--qualifier`` (string)


  Specify a version or alias to add permissions to a published version of the function.

  

``--revision-id`` (string)


  An optional value you can use to ensure you are updating the latest update of the function version or alias. If the ``RevisionID`` you pass doesn't match the latest ``RevisionId`` of the function or alias, it will fail with an error message, advising you to retrieve the latest function version or alias ``RevisionID`` using either  GetFunction or  GetAlias  

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

Statement -> (string)

  

  The permission statement you specified in the request. The response returns the same as a string using a backslash ("\") as an escape character in the JSON.

  

  

