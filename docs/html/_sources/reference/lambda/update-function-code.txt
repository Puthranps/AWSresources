[ :ref:`aws <cli:aws>` . :ref:`lambda <cli:aws lambda>` ]

.. _cli:aws lambda update-function-code:


********************
update-function-code
********************



===========
Description
===========



Updates the code for the specified Lambda function. This operation must only be used on an existing Lambda function and cannot be used to update the function configuration.

 

If you are using the versioning feature, note this API will always update the $LATEST version of your Lambda function. For information about the versioning feature, see `AWS Lambda Function Versioning and Aliases <http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html>`__ . 

 

This operation requires permission for the ``lambda:UpdateFunctionCode`` action.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/lambda-2015-03-31/UpdateFunctionCode>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    update-function-code
  --function-name <value>
  [--zip-file <value>]
  [--s3-bucket <value>]
  [--s3-key <value>]
  [--s3-object-version <value>]
  [--publish | --no-publish]
  [--dry-run | --no-dry-run]
  [--revision-id <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--function-name`` (string)


  The name of the lambda function.

   

   **Name formats**  

   

   
  * **Function name** - ``MyFunction`` . 
   
  * **Function ARN** - ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction`` . 
   
  * **Partial ARN** - ``123456789012:function:MyFunction`` . 
   

   

  The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.

  

``--zip-file`` (blob)


  The path to the zip file of the code you are uploading. Example: fileb://code.zip

  

``--s3-bucket`` (string)


  Amazon S3 bucket name where the .zip file containing your deployment package is stored. This bucket must reside in the same AWS Region where you are creating the Lambda function.

  

``--s3-key`` (string)


  The Amazon S3 object (the deployment package) key name you want to upload.

  

``--s3-object-version`` (string)


  The Amazon S3 object (the deployment package) version you want to upload.

  

``--publish`` | ``--no-publish`` (boolean)


  This boolean parameter can be used to request AWS Lambda to update the Lambda function and publish a version as an atomic operation.

  

``--dry-run`` | ``--no-dry-run`` (boolean)


  This boolean parameter can be used to test your request to AWS Lambda to update the Lambda function and publish a version as an atomic operation. It will do all necessary computation and validation of your code but will not upload it or a publish a version. Each time this operation is invoked, the ``CodeSha256`` hash value of the provided code will also be computed and returned in the response.

  

``--revision-id`` (string)


  An optional value you can use to ensure you are updating the latest update of the function version or alias. If the ``RevisionID`` you pass doesn't match the latest ``RevisionId`` of the function or alias, it will fail with an error message, advising you to retrieve the latest function version or alias ``RevisionID`` using either using using either  GetFunction or  GetAlias .

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

FunctionName -> (string)

  

  The name of the function.

  

  

FunctionArn -> (string)

  

  The function's Amazon Resource Name.

  

  

Runtime -> (string)

  

  The runtime environment for the Lambda function.

  

  

Role -> (string)

  

  The function's execution role.

  

  

Handler -> (string)

  

  The function Lambda calls to begin executing your function.

  

  

CodeSize -> (long)

  

  The size of the function's deployment package in bytes.

  

  

Description -> (string)

  

  The function's description.

  

  

Timeout -> (integer)

  

  The amount of time that Lambda allows a function to run before terminating it.

  

  

MemorySize -> (integer)

  

  The memory allocated to the function

  

  

LastModified -> (string)

  

  The date and time that the function was last updated, in `ISO-8601 format <https://www.w3.org/TR/NOTE-datetime>`__ (YYYY-MM-DDThh:mm:ssTZD).

  

  

CodeSha256 -> (string)

  

  The SHA256 hash of the function's deployment package.

  

  

Version -> (string)

  

  The version of the Lambda function.

  

  

VpcConfig -> (structure)

  

  The function's networking configuration.

  

  SubnetIds -> (list)

    

    A list of VPC subnet IDs.

    

    (string)

      

      

    

  SecurityGroupIds -> (list)

    

    A list of VPC security groups IDs.

    

    (string)

      

      

    

  VpcId -> (string)

    

    The ID of the VPC.

    

    

  

DeadLetterConfig -> (structure)

  

  The function's dead letter queue.

  

  TargetArn -> (string)

    

    The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.

    

    

  

Environment -> (structure)

  

  The function's environment variables.

  

  Variables -> (map)

    

    Environment variable key-value pairs.

    

    key -> (string)

      

      

    value -> (string)

      

      

    

  Error -> (structure)

    

    Error messages for environment variables that could not be applied.

    

    ErrorCode -> (string)

      

      The error code.

      

      

    Message -> (string)

      

      The error message.

      

      

    

  

KMSKeyArn -> (string)

  

  The KMS key used to encrypt the function's environment variables. Only returned if you've configured a customer managed CMK.

  

  

TracingConfig -> (structure)

  

  The function's AWS X-Ray tracing configuration.

  

  Mode -> (string)

    

    The tracing mode.

    

    

  

MasterArn -> (string)

  

  The ARN of the master function.

  

  

RevisionId -> (string)

  

  Represents the latest updated revision of the function or alias.

  

  

