[ :ref:`aws <cli:aws>` . :ref:`lambda <cli:aws lambda>` ]

.. _cli:aws lambda update-function-configuration:


*****************************
update-function-configuration
*****************************



===========
Description
===========



Updates the configuration parameters for the specified Lambda function by using the values provided in the request. You provide only the parameters you want to change. This operation must only be used on an existing Lambda function and cannot be used to update the function's code.

 

If you are using the versioning feature, note this API will always update the $LATEST version of your Lambda function. For information about the versioning feature, see `AWS Lambda Function Versioning and Aliases <http://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html>`__ . 

 

This operation requires permission for the ``lambda:UpdateFunctionConfiguration`` action.



See also: `AWS API Documentation <https://docs.aws.amazon.com/goto/WebAPI/lambda-2015-03-31/UpdateFunctionConfiguration>`_

See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


========
Synopsis
========

::

    update-function-configuration
  --function-name <value>
  [--role <value>]
  [--handler <value>]
  [--description <value>]
  [--timeout <value>]
  [--memory-size <value>]
  [--vpc-config <value>]
  [--environment <value>]
  [--runtime <value>]
  [--dead-letter-config <value>]
  [--kms-key-arn <value>]
  [--tracing-config <value>]
  [--revision-id <value>]
  [--cli-input-json <value>]
  [--generate-cli-skeleton <value>]




=======
Options
=======

``--function-name`` (string)


  The name of the lambda function.

   

   **Name formats**  

   

   
  * **Function name** - ``MyFunction`` . 
   
  * **Function ARN** - ``arn:aws:lambda:us-west-2:123456789012:function:MyFunction`` . 
   
  * **Partial ARN** - ``123456789012:function:MyFunction`` . 
   

   

  The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.

  

``--role`` (string)


  The Amazon Resource Name (ARN) of the IAM role that Lambda will assume when it executes your function.

  

``--handler`` (string)


  The function that Lambda calls to begin executing your function. For Node.js, it is the ``module-name.export`` value in your function. 

  

``--description`` (string)


  A short user-defined function description. AWS Lambda does not use this value. Assign a meaningful description as you see fit.

  

``--timeout`` (integer)


  The amount of time that Lambda allows a function to run before terminating it. The default is 3 seconds. The maximum allowed value is 900 seconds.

  

``--memory-size`` (integer)


  The amount of memory, in MB, your Lambda function is given. AWS Lambda uses this memory size to infer the amount of CPU allocated to your function. Your function use-case determines your CPU and memory requirements. For example, a database operation might need less memory compared to an image processing function. The default value is 128 MB. The value must be a multiple of 64 MB.

  

``--vpc-config`` (structure)


  Specify security groups and subnets in a VPC to which your Lambda function needs access.

  



Shorthand Syntax::

    SubnetIds=string,string,SecurityGroupIds=string,string




JSON Syntax::

  {
    "SubnetIds": ["string", ...],
    "SecurityGroupIds": ["string", ...]
  }



``--environment`` (structure)


  The parent object that contains your environment's configuration settings.

  



Shorthand Syntax::

    Variables={KeyName1=string,KeyName2=string}




JSON Syntax::

  {
    "Variables": {"string": "string"
      ...}
  }



``--runtime`` (string)


  The runtime version for the function.

  

  Possible values:

  
  *   ``nodejs``

  
  *   ``nodejs4.3``

  
  *   ``nodejs6.10``

  
  *   ``nodejs8.10``

  
  *   ``java8``

  
  *   ``python2.7``

  
  *   ``python3.6``

  
  *   ``dotnetcore1.0``

  
  *   ``dotnetcore2.0``

  
  *   ``dotnetcore2.1``

  
  *   ``nodejs4.3-edge``

  
  *   ``go1.x``

  

  

``--dead-letter-config`` (structure)


  A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see `Dead Letter Queues <http://docs.aws.amazon.com/lambda/latest/dg/dlq.html>`__ .

  



Shorthand Syntax::

    TargetArn=string




JSON Syntax::

  {
    "TargetArn": "string"
  }



``--kms-key-arn`` (string)


  The Amazon Resource Name (ARN) of the KMS key used to encrypt your function's environment variables. If you elect to use the AWS Lambda default service key, pass in an empty string ("") for this parameter.

  

``--tracing-config`` (structure)


  Set ``Mode`` to ``Active`` to sample and trace a subset of incoming requests with AWS X-Ray.

  



Shorthand Syntax::

    Mode=string




JSON Syntax::

  {
    "Mode": "Active"|"PassThrough"
  }



``--revision-id`` (string)


  An optional value you can use to ensure you are updating the latest update of the function version or alias. If the ``RevisionID`` you pass doesn't match the latest ``RevisionId`` of the function or alias, it will fail with an error message, advising you to retrieve the latest function version or alias ``RevisionID`` using either  GetFunction or  GetAlias .

  

``--cli-input-json`` (string)
Performs service operation based on the JSON string provided. The JSON string follows the format provided by ``--generate-cli-skeleton``. If other arguments are provided on the command line, the CLI values will override the JSON-provided values. It is not possible to pass arbitrary binary values using a JSON-provided value as the string will be taken literally.

``--generate-cli-skeleton`` (string)
Prints a JSON skeleton to standard output without sending an API request. If provided with no value or the value ``input``, prints a sample input JSON that can be used as an argument for ``--cli-input-json``. If provided with the value ``output``, it validates the command inputs and returns a sample output JSON for that command.


See :doc:`'aws help' </reference/index>` for descriptions of global parameters.


======
Output
======

FunctionName -> (string)

  

  The name of the function.

  

  

FunctionArn -> (string)

  

  The function's Amazon Resource Name.

  

  

Runtime -> (string)

  

  The runtime environment for the Lambda function.

  

  

Role -> (string)

  

  The function's execution role.

  

  

Handler -> (string)

  

  The function Lambda calls to begin executing your function.

  

  

CodeSize -> (long)

  

  The size of the function's deployment package in bytes.

  

  

Description -> (string)

  

  The function's description.

  

  

Timeout -> (integer)

  

  The amount of time that Lambda allows a function to run before terminating it.

  

  

MemorySize -> (integer)

  

  The memory allocated to the function

  

  

LastModified -> (string)

  

  The date and time that the function was last updated, in `ISO-8601 format <https://www.w3.org/TR/NOTE-datetime>`__ (YYYY-MM-DDThh:mm:ssTZD).

  

  

CodeSha256 -> (string)

  

  The SHA256 hash of the function's deployment package.

  

  

Version -> (string)

  

  The version of the Lambda function.

  

  

VpcConfig -> (structure)

  

  The function's networking configuration.

  

  SubnetIds -> (list)

    

    A list of VPC subnet IDs.

    

    (string)

      

      

    

  SecurityGroupIds -> (list)

    

    A list of VPC security groups IDs.

    

    (string)

      

      

    

  VpcId -> (string)

    

    The ID of the VPC.

    

    

  

DeadLetterConfig -> (structure)

  

  The function's dead letter queue.

  

  TargetArn -> (string)

    

    The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.

    

    

  

Environment -> (structure)

  

  The function's environment variables.

  

  Variables -> (map)

    

    Environment variable key-value pairs.

    

    key -> (string)

      

      

    value -> (string)

      

      

    

  Error -> (structure)

    

    Error messages for environment variables that could not be applied.

    

    ErrorCode -> (string)

      

      The error code.

      

      

    Message -> (string)

      

      The error message.

      

      

    

  

KMSKeyArn -> (string)

  

  The KMS key used to encrypt the function's environment variables. Only returned if you've configured a customer managed CMK.

  

  

TracingConfig -> (structure)

  

  The function's AWS X-Ray tracing configuration.

  

  Mode -> (string)

    

    The tracing mode.

    

    

  

MasterArn -> (string)

  

  The ARN of the master function.

  

  

RevisionId -> (string)

  

  Represents the latest updated revision of the function or alias.

  

  

